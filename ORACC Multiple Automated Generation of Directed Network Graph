{"cells":[{"cell_type":"markdown","metadata":{"id":"heEUmL123ffu"},"source":["## Multiple Automated Generation of Directed Network Graph\n","## DS Discovery Project \n","## Team 1: Adam, Win\n","## Dataset Edited by Jacob Jan de Ridder, 2020, for the Akkadian Epistolary Corpora project and released under the Creative Commons Attribution Share-Alike license 3.0.\n","Add description later because it will get cluttered with repetitive code...\n"]},{"cell_type":"markdown","source":["##to fix\n","\n","id has no periods\n","\n","source and target remove the period\n","\n","remove the Id column\n","\n","separate DN RN like tcma called EPOS"],"metadata":{"id":"QoNU5PyhmPiI"}},{"cell_type":"markdown","source":["##to fix nov21\n","\n","tcma add to folder\n","\n","1. remove index and id, export csv index = False\n","2. make separate id_word column (e.g., Q006226.1.1): add column called `attribution` for attribuiton to every row in node list. These can be obtained from the corpusjson under `source`, e.g. \"source\": \"http://oracc.org/adsd/adart3\" + `id_text` (see examples below):\n","* example 1: http://oracc.org/suhu/Q006226/\n","* this joins the following elements:\n","  * url http://oracc.org/\n","  * project `suhu/`\n","  * id_word `Q006226.1.1/`\n","* example 2: http://oracc.org/tcma/tsh1/P531094\n","* this joins the following elements:\n","  * url http://oracc.org/\n","  * project `tcma/`\n","  * sub-project `tsh1/`\n","  * id_word `P531094.1.1/`\n","3. Add project folder for each node and edge list under `people` folder\n"],"metadata":{"id":"tk-QInEoYebl"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"cwQGYpOfzb8L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669050664484,"user_tz":480,"elapsed":24670,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"81499808-bc88-44eb-a2b8-35eb1d3e66f7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2DDx4H2Ylk-e"},"outputs":[],"source":["import pandas as pd\n","import zipfile\n","import json\n","import requests\n","from tqdm import tqdm\n","import os\n","import errno\n","import re\n","import random\n","import numpy as np\n","import sys\n","import copy\n","\n","\n","import networkx as nx\n","#import matplotlib.pyplot as plt\n","#from ipywidgets import interact\n","#import ipywidgets as widgets\n","#from ipywidgets import Layout\n","#from IPython.display import display, clear_output"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4lZxhkwYl3sa"},"outputs":[],"source":["#Set folder for local drive\n","#folder = 'C://Users/jason/OneDrive/Documents/ORACC_MASTER/'\n","\n","#Set folder for remote drive\n","folder = '/content/drive/My Drive/tcma/'\n","\n","#importing utils for the method which downloads the current text json files\n","os.chdir(folder + 'network/utils/')\n","from utils import oracc_download\n","\n","# This is a user defined module that searches through the texts to find the entities in the text that\n","# are people and places, to be imported as nodes into the network\n","os.chdir(folder + 'network/')\n","import rank_parser4 as rp"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DAhmzoTgpx_B"},"outputs":[],"source":["def parsejson(text):\n","    for JSONobject in text[\"cdl\"]:\n","        if \"cdl\" in JSONobject: \n","            #print('cdl in JSON')\n","            parsejson(JSONobject)\n","        if \"label\" in JSONobject:\n","            meta_d[\"label\"] = JSONobject['label']\n","        if \"f\" in JSONobject:\n","            lemma = JSONobject[\"f\"]\n","            if \"ftype\" in JSONobject:   # you don't need this - useful for distinguishing between regular text and year names \n","                lemma['ftype'] = JSONobject['ftype']\n","            lemma[\"id_word\"] = JSONobject[\"ref\"]\n","            lemma['label'] = meta_d[\"label\"]\n","            lemma[\"id_text\"] = meta_d[\"id_text\"]\n","            lemm_l.append(lemma)\n","            #print('Appending Lemma: ' + str(lemma))\n","        if \"strict\" in JSONobject and JSONobject[\"strict\"] == \"1\":\n","            lemma = {key: JSONobject[key] for key in dollar_keys}\n","            lemma[\"id_word\"] = JSONobject[\"ref\"]\n","            lemma[\"id_text\"] = meta_d[\"id_text\"]\n","            lemm_l.append(lemma)\n","    return"]},{"cell_type":"markdown","source":["#suhu"],"metadata":{"id":"v82DSqKgIPgg"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"gg2h4kWVVQOs","colab":{"base_uri":"https://localhost:8080/","height":140,"referenced_widgets":["fe3e95676776481e80717c7f6e438b28","152f716541744dd1abbc34eabee76d4b","b09c73947e1647d0accb411b2c1429aa","c03955363e8a4e16bcb133a59f1a5229","0fa785062fca473380082146843ec16e","9ba4edec760d4a209a71075c4fac580d","d7e01089b537449790f5a0d2421f9f43","13c0cedfb22c413a93bb700c9421f569","2980ae2743954ad497f13d67fd4a64a6","f650962eecd34ec586efa5f91ab704f9","79201ec10e7a45f09f6d7cecaa14f859"]},"executionInfo":{"status":"ok","timestamp":1669051501041,"user_tz":480,"elapsed":408,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"3f3e335b-c807-4fd4-c635-917cf0df9817"},"outputs":[{"output_type":"stream","name":"stdout","text":["Saving http://build-oracc.museum.upenn.edu/json/suhu.zip as jsonzip/suhu.zip.\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\n","  InsecureRequestWarning)\n"]},{"output_type":"display_data","data":{"text/plain":["suhu:   0%|          | 0.00/1.25M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fe3e95676776481e80717c7f6e438b28"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["['suhu']"]},"metadata":{},"execution_count":38}],"source":["os.chdir(folder + 'network/')\n","\n","projects = [\n","      'suhu'\n","\n","]\n","projects = oracc_download(projects,'suhu') #DOWNLOAD REDUNDANCY\n","projects"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Nc6kf_PQqcq8","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1669051501469,"user_tz":480,"elapsed":433,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"f329ee87-e81a-4a8e-c41a-6d0676cbb6f8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Project: suhu\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 33/33 [00:00<00:00, 93.09it/s] \n"]}],"source":["lemm_l = []\n","meta_d = {\"label\": None, \"id_text\": None}\n","dollar_keys = [\"extent\", \"scope\", \"state\"]\n","\n","df_cat = pd.DataFrame()\n","used_pnums = []\n","cat_d = {}\n","for project in projects:\n","  print('Project: ' + str(project))\n","  z = zipfile.ZipFile('jsonzip/' + project.replace('/','-') + '.zip')\n","  #print(file + \" does not exist or is not a proper ZIP file\")\n","  files = z.namelist()     # list of all the files in the ZIP\n","  files = [name for name in files if \"corpusjson\" in name and name[-5:] == '.json']\n","  cat_file = z.read(project + '/catalogue.json').decode('utf-8')\n","  cat_json = json.loads(cat_file)\n","  cat_d.update(dict(cat_json['members']))\n","  #df_cat = pd.concat([df_cat,pd.DataFrame(cat_json['members']).T])                          #that holds all the P, Q, and X numbers.\n","\n","  for filename in tqdm(files):       #iterate over the file names\n","      id_text = filename[-12:-5]\n","      if id_text in used_pnums:\n","        continue\n","      else:\n","        used_pnums.append(id_text)\n","      meta_d[\"id_text\"] = id_text\n","\n","      st = z.read(filename).decode('utf-8')         #read and decode the json file of one particular text\n","      data_json = json.loads(st)                # make it into a json object (essentially a dictionary)\n","      #print(str(data_json))\n","      parsejson(data_json)               # and send to the parsejson() function\n","  z.close()\n","\n","df_cat = pd.DataFrame(cat_d).T\n","words_df = pd.DataFrame(lemm_l)\n","#words_df\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yHUSP971ZPig","colab":{"base_uri":"https://localhost:8080/","height":728},"executionInfo":{"status":"ok","timestamp":1669051502533,"user_tz":480,"elapsed":448,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"c6d06fb7-1383-4a95-f52d-53bebe36ce25"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     lang                    form delim  \\\n","0     akk                       x         \n","1     akk  {m}{d}MAŠ-NIG₂.DU-URU₃         \n","2     akk                       x         \n","3     akk                       x         \n","4     akk                {d}IŠKUR         \n","...   ...                     ...   ...   \n","5572  akk                       x         \n","5573  akk                       x         \n","5574  akk                       x         \n","5575  akk                       x         \n","5576  akk                       x         \n","\n","                                                    gdl pos       id_word  \\\n","0     [{'x': 'ellipsis', 'id': 'Q006226.2.1.0', 'bre...   u   Q006226.2.1   \n","1     [{'gg': 'logo', 'gdl_type': 'logo', 'group': [...  RN   Q006226.2.2   \n","2     [{'x': 'ellipsis', 'id': 'Q006226.2.3.0', 'bre...   u   Q006226.2.3   \n","3     [{'x': 'ellipsis', 'id': 'Q006226.3.1.0', 'bre...   u   Q006226.3.1   \n","4     [{'gg': 'logo', 'gdl_type': 'logo', 'group': [...  DN   Q006226.3.2   \n","...                                                 ...  ..           ...   \n","5572  [{'v': 'x', 'utf8': 'x', 'id': 'Q006223.22.4.0'}]   u  Q006223.22.4   \n","5573  [{'v': 'x', 'utf8': 'x', 'id': 'Q006223.22.5.0'}]   u  Q006223.22.5   \n","5574  [{'v': 'x', 'utf8': 'x', 'id': 'Q006223.22.6.0'}]   u  Q006223.22.6   \n","5575  [{'v': 'x', 'utf8': 'x', 'id': 'Q006223.22.7.0'}]   u  Q006223.22.7   \n","5576  [{'x': 'ellipsis', 'id': 'Q006223.22.8.0', 'br...   u  Q006223.22.8   \n","\n","     label  id_text                    cf                gw             sense  \\\n","0       1'  Q006226                                                             \n","1       1'  Q006226  Ninurta-kudurri-uṣur  governor-of-Suhu  governor-of-Suhu   \n","2       1'  Q006226                                                             \n","3       2'  Q006226                                                             \n","4       2'  Q006226                  Adad         storm-god         storm-god   \n","...    ...      ...                   ...               ...               ...   \n","5572   r 9  Q006223                                                             \n","5573   r 9  Q006223                                                             \n","5574   r 9  Q006223                                                             \n","5575   r 9  Q006223                                                             \n","5576   r 9  Q006223                                                             \n","\n","                      norm epos  id_line                 norm1  \\\n","0                                      2                     x   \n","1     Ninurta-kudurri-uṣur   RN        2  Ninurta-kudurri-uṣur   \n","2                                      2                     x   \n","3                                      3                     x   \n","4                     Adad   DN        3                  Adad   \n","...                    ...  ...      ...                   ...   \n","5572                                  22                     x   \n","5573                                  22                     x   \n","5574                                  22                     x   \n","5575                                  22                     x   \n","5576                                  22                     x   \n","\n","                                         lemma  \n","0                                      x[NA]NA  \n","1     Ninurta-kudurri-uṣur[governor-of-Suhu]RN  \n","2                                      x[NA]NA  \n","3                                      x[NA]NA  \n","4                            Adad[storm-god]DN  \n","...                                        ...  \n","5572                                   x[NA]NA  \n","5573                                   x[NA]NA  \n","5574                                   x[NA]NA  \n","5575                                   x[NA]NA  \n","5576                                   x[NA]NA  \n","\n","[5577 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-01a508b1-b7b9-4808-b5ac-e4a69c585535\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lang</th>\n","      <th>form</th>\n","      <th>delim</th>\n","      <th>gdl</th>\n","      <th>pos</th>\n","      <th>id_word</th>\n","      <th>label</th>\n","      <th>id_text</th>\n","      <th>cf</th>\n","      <th>gw</th>\n","      <th>sense</th>\n","      <th>norm</th>\n","      <th>epos</th>\n","      <th>id_line</th>\n","      <th>norm1</th>\n","      <th>lemma</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>akk</td>\n","      <td>x</td>\n","      <td></td>\n","      <td>[{'x': 'ellipsis', 'id': 'Q006226.2.1.0', 'bre...</td>\n","      <td>u</td>\n","      <td>Q006226.2.1</td>\n","      <td>1'</td>\n","      <td>Q006226</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>2</td>\n","      <td>x</td>\n","      <td>x[NA]NA</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>akk</td>\n","      <td>{m}{d}MAŠ-NIG₂.DU-URU₃</td>\n","      <td></td>\n","      <td>[{'gg': 'logo', 'gdl_type': 'logo', 'group': [...</td>\n","      <td>RN</td>\n","      <td>Q006226.2.2</td>\n","      <td>1'</td>\n","      <td>Q006226</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>governor-of-Suhu</td>\n","      <td>governor-of-Suhu</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>RN</td>\n","      <td>2</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Ninurta-kudurri-uṣur[governor-of-Suhu]RN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>akk</td>\n","      <td>x</td>\n","      <td></td>\n","      <td>[{'x': 'ellipsis', 'id': 'Q006226.2.3.0', 'bre...</td>\n","      <td>u</td>\n","      <td>Q006226.2.3</td>\n","      <td>1'</td>\n","      <td>Q006226</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>2</td>\n","      <td>x</td>\n","      <td>x[NA]NA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>akk</td>\n","      <td>x</td>\n","      <td></td>\n","      <td>[{'x': 'ellipsis', 'id': 'Q006226.3.1.0', 'bre...</td>\n","      <td>u</td>\n","      <td>Q006226.3.1</td>\n","      <td>2'</td>\n","      <td>Q006226</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>3</td>\n","      <td>x</td>\n","      <td>x[NA]NA</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>akk</td>\n","      <td>{d}IŠKUR</td>\n","      <td></td>\n","      <td>[{'gg': 'logo', 'gdl_type': 'logo', 'group': [...</td>\n","      <td>DN</td>\n","      <td>Q006226.3.2</td>\n","      <td>2'</td>\n","      <td>Q006226</td>\n","      <td>Adad</td>\n","      <td>storm-god</td>\n","      <td>storm-god</td>\n","      <td>Adad</td>\n","      <td>DN</td>\n","      <td>3</td>\n","      <td>Adad</td>\n","      <td>Adad[storm-god]DN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5572</th>\n","      <td>akk</td>\n","      <td>x</td>\n","      <td></td>\n","      <td>[{'v': 'x', 'utf8': 'x', 'id': 'Q006223.22.4.0'}]</td>\n","      <td>u</td>\n","      <td>Q006223.22.4</td>\n","      <td>r 9</td>\n","      <td>Q006223</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>22</td>\n","      <td>x</td>\n","      <td>x[NA]NA</td>\n","    </tr>\n","    <tr>\n","      <th>5573</th>\n","      <td>akk</td>\n","      <td>x</td>\n","      <td></td>\n","      <td>[{'v': 'x', 'utf8': 'x', 'id': 'Q006223.22.5.0'}]</td>\n","      <td>u</td>\n","      <td>Q006223.22.5</td>\n","      <td>r 9</td>\n","      <td>Q006223</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>22</td>\n","      <td>x</td>\n","      <td>x[NA]NA</td>\n","    </tr>\n","    <tr>\n","      <th>5574</th>\n","      <td>akk</td>\n","      <td>x</td>\n","      <td></td>\n","      <td>[{'v': 'x', 'utf8': 'x', 'id': 'Q006223.22.6.0'}]</td>\n","      <td>u</td>\n","      <td>Q006223.22.6</td>\n","      <td>r 9</td>\n","      <td>Q006223</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>22</td>\n","      <td>x</td>\n","      <td>x[NA]NA</td>\n","    </tr>\n","    <tr>\n","      <th>5575</th>\n","      <td>akk</td>\n","      <td>x</td>\n","      <td></td>\n","      <td>[{'v': 'x', 'utf8': 'x', 'id': 'Q006223.22.7.0'}]</td>\n","      <td>u</td>\n","      <td>Q006223.22.7</td>\n","      <td>r 9</td>\n","      <td>Q006223</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>22</td>\n","      <td>x</td>\n","      <td>x[NA]NA</td>\n","    </tr>\n","    <tr>\n","      <th>5576</th>\n","      <td>akk</td>\n","      <td>x</td>\n","      <td></td>\n","      <td>[{'x': 'ellipsis', 'id': 'Q006223.22.8.0', 'br...</td>\n","      <td>u</td>\n","      <td>Q006223.22.8</td>\n","      <td>r 9</td>\n","      <td>Q006223</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>22</td>\n","      <td>x</td>\n","      <td>x[NA]NA</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5577 rows × 16 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01a508b1-b7b9-4808-b5ac-e4a69c585535')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-01a508b1-b7b9-4808-b5ac-e4a69c585535 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-01a508b1-b7b9-4808-b5ac-e4a69c585535');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":40}],"source":["words_df = words_df.fillna('')   # replace NaN (Not a Number) with empty string\n","\n","findreplace = {' ' : '-', ',' : ''}\n","words_df = words_df.replace({'gw' : findreplace, 'sense' : findreplace}, regex=True)\n","\n","words_df['id_line'] = [int(wordid.split('.')[1]) for wordid in words_df['id_word']]\n","\n","words_df[\"norm1\"] = words_df[\"norm\"]\n","words_df.loc[words_df[\"norm1\"] == \"\" , 'norm1'] = words_df['form']\n","\n","words_df['lemma'] = words_df[\"cf\"] + \"[\" + words_df[\"gw\"] + \"]\" + words_df[\"pos\"]\n","words_df.loc[words_df[\"cf\"] == \"\" , 'lemma'] = words_df['form'] + \"[NA]NA\"\n","words_df.loc[words_df[\"form\"] == \"\", 'lemma'] = \"\"\n","\n","#words_df = words_df.merge(df_cat[['dossier_list']],how='left',left_on='id_text',right_index=True)\n","\n","d = words_df.to_dict(orient='index')\n","\n","words_df"]},{"cell_type":"code","source":["#df cat fixation\n","df_cat.insert(0, \"id_text\", df_cat.index)\n","df_cat"],"metadata":{"id":"BPZIx2igfc6J","colab":{"base_uri":"https://localhost:8080/","height":4042},"executionInfo":{"status":"ok","timestamp":1669051504592,"user_tz":480,"elapsed":156,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"76775455-23c7-4ed0-898c-3e8d8754c2fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         id_text       langs project  cdli_id  \\\n","Q006206  Q006206  0x08000000    suhu  P469149   \n","Q006207  Q006207  0x08000000    suhu  P469150   \n","Q006208  Q006208  0x08000000    suhu  P469151   \n","Q006209  Q006209  0x08000000    suhu  P469152   \n","Q006210  Q006210  0x08000000    suhu  P469153   \n","Q006211  Q006211  0x08000000    suhu  P469154   \n","Q006212  Q006212  0x08000000    suhu  P469155   \n","Q006213  Q006213  0x08000000    suhu  P469156   \n","Q006214  Q006214  0x08000000    suhu  P469157   \n","Q006215  Q006215  0x08000000    suhu  P469158   \n","Q006216  Q006216  0x08000000    suhu  P469159   \n","Q006217  Q006217  0x08000000    suhu  P469160   \n","Q006218  Q006218  0x08000000    suhu  P469161   \n","Q006219  Q006219  0x08000000    suhu  P469162   \n","Q006220  Q006220  0x08000000    suhu  P469163   \n","Q006221  Q006221  0x08000000    suhu  P469166   \n","Q006222  Q006222  0x08000000    suhu  P469167   \n","Q006223  Q006223  0x08000000    suhu  P469168   \n","Q006224  Q006224  0x08000000    suhu  P469169   \n","Q006225  Q006225  0x08000000    suhu  P469164   \n","Q006226  Q006226  0x08000000    suhu  P469165   \n","Q006227  Q006227  0x08000000    suhu  P469170   \n","Q006228  Q006228  0x08000000    suhu  P469171   \n","Q006229  Q006229  0x08000000    suhu  P469172   \n","Q006230  Q006230  0x08000000    suhu  P469173   \n","Q006231  Q006231  0x08000000    suhu  P469174   \n","Q006232  Q006232  0x08000000    suhu  P469175   \n","Q006233  Q006233  0x08000000    suhu  P469176   \n","Q006234  Q006234  0x08000000    suhu  P469177   \n","Q006235  Q006235  0x08000000    suhu  P469178   \n","Q006236  Q006236  0x08000000    suhu  P469179   \n","Q006237  Q006237  0x08000000    suhu  P469180   \n","Q006238  Q006238  0x08000000    suhu  P469181   \n","\n","                                                collection  \\\n","Q006206  Arkeoloji Müzerleri, Istanbul, Turkey; Vordera...   \n","Q006207                         Iraq Museum, Baghdad, Iraq   \n","Q006208                         Iraq Museum, Baghdad, Iraq   \n","Q006209                                                NaN   \n","Q006210                         Iraq Museum, Baghdad, Iraq   \n","Q006211                         Iraq Museum, Baghdad, Iraq   \n","Q006212                         Iraq Museum, Baghdad, Iraq   \n","Q006213                         Iraq Museum, Baghdad, Iraq   \n","Q006214                         Iraq Museum, Baghdad, Iraq   \n","Q006215                         Iraq Museum, Baghdad, Iraq   \n","Q006216                         Iraq Museum, Baghdad, Iraq   \n","Q006217                         Iraq Museum, Baghdad, Iraq   \n","Q006218                         Iraq Museum, Baghdad, Iraq   \n","Q006219                         Iraq Museum, Baghdad, Iraq   \n","Q006220                         Iraq Museum, Baghdad, Iraq   \n","Q006221                         Iraq Museum, Baghdad, Iraq   \n","Q006222                         Iraq Museum, Baghdad, Iraq   \n","Q006223                         Iraq Museum, Baghdad, Iraq   \n","Q006224                         Iraq Museum, Baghdad, Iraq   \n","Q006225                         Iraq Museum, Baghdad, Iraq   \n","Q006226                                                NaN   \n","Q006227                         Iraq Museum, Baghdad, Iraq   \n","Q006228                         Iraq Museum, Baghdad, Iraq   \n","Q006229                         Iraq Museum, Baghdad, Iraq   \n","Q006230                         Iraq Museum, Baghdad, Iraq   \n","Q006231                         Iraq Museum, Baghdad, Iraq   \n","Q006232                         Iraq Museum, Baghdad, Iraq   \n","Q006233                         Iraq Museum, Baghdad, Iraq   \n","Q006234                         Iraq Museum, Baghdad, Iraq   \n","Q006235                                                NaN   \n","Q006236                                                NaN   \n","Q006237                                                NaN   \n","Q006238  Oriental Institute, University of Chicago, Chi...   \n","\n","                                                   credits     date_of_origin  \\\n","Q006206  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006207  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006208  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006209  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006210  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006211  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006212  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006213  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006214  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006215  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006216  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006217  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006218  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006219  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006220  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006221  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006222  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006223  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006224  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006225  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006226  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006227  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006228  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006229  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006230  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006231  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006232  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006233  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006234  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006235  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006236  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006237  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","Q006238  Based on Grant Frame, Rulers of Babylonia: Fro...  early 8th century   \n","\n","                       designation                    display_name  \\\n","Q006206          Šamaš-reša-uṣur 1          Suhu Šamaš-reša-uṣur 1   \n","Q006207          Šamaš-reša-uṣur 2          Suhu Šamaš-reša-uṣur 2   \n","Q006208          Šamaš-reša-uṣur 3          Suhu Šamaš-reša-uṣur 3   \n","Q006209          Šamaš-reša-uṣur 4          Suhu Šamaš-reša-uṣur 4   \n","Q006210       Šamaš-reša-uṣur 1001       Suhu Šamaš-reša-uṣur 1001   \n","Q006211    Ninurta-kudurri-uṣur 01    Suhu Ninurta-kudurri-uṣur 01   \n","Q006212    Ninurta-kudurri-uṣur 02    Suhu Ninurta-kudurri-uṣur 02   \n","Q006213    Ninurta-kudurri-uṣur 03    Suhu Ninurta-kudurri-uṣur 03   \n","Q006214    Ninurta-kudurri-uṣur 04    Suhu Ninurta-kudurri-uṣur 04   \n","Q006215    Ninurta-kudurri-uṣur 05    Suhu Ninurta-kudurri-uṣur 05   \n","Q006216    Ninurta-kudurri-uṣur 06    Suhu Ninurta-kudurri-uṣur 06   \n","Q006217    Ninurta-kudurri-uṣur 07    Suhu Ninurta-kudurri-uṣur 07   \n","Q006218    Ninurta-kudurri-uṣur 08    Suhu Ninurta-kudurri-uṣur 08   \n","Q006219    Ninurta-kudurri-uṣur 09    Suhu Ninurta-kudurri-uṣur 09   \n","Q006220    Ninurta-kudurri-uṣur 10    Suhu Ninurta-kudurri-uṣur 10   \n","Q006221    Ninurta-kudurri-uṣur 11    Suhu Ninurta-kudurri-uṣur 11   \n","Q006222    Ninurta-kudurri-uṣur 12    Suhu Ninurta-kudurri-uṣur 12   \n","Q006223    Ninurta-kudurri-uṣur 13    Suhu Ninurta-kudurri-uṣur 13   \n","Q006224    Ninurta-kudurri-uṣur 14    Suhu Ninurta-kudurri-uṣur 14   \n","Q006225  Ninurta-kudurri-uṣur 1001  Suhu Ninurta-kudurri-uṣur 1001   \n","Q006226  Ninurta-kudurri-uṣur 1002  Suhu Ninurta-kudurri-uṣur 1002   \n","Q006227     Unidentified Suhu 1001     Suhu Unidentified Suhu 1001   \n","Q006228     Unidentified Suhu 1002     Suhu Unidentified Suhu 1002   \n","Q006229     Unidentified Suhu 1003     Suhu Unidentified Suhu 1003   \n","Q006230     Unidentified Suhu 1004     Suhu Unidentified Suhu 1004   \n","Q006231     Unidentified Suhu 1005     Suhu Unidentified Suhu 1005   \n","Q006232     Unidentified Suhu 1006     Suhu Unidentified Suhu 1006   \n","Q006233     Unidentified Suhu 1007     Suhu Unidentified Suhu 1007   \n","Q006234     Unidentified Suhu 1008     Suhu Unidentified Suhu 1008   \n","Q006235     Unidentified Suhu 1009     Suhu Unidentified Suhu 1009   \n","Q006236     Unidentified Suhu 1010     Suhu Unidentified Suhu 1010   \n","Q006237     Unidentified Suhu 1011     Suhu Unidentified Suhu 1011   \n","Q006238     Unidentified Suhu 1012     Suhu Unidentified Suhu 1012   \n","\n","        dynastic_seat  ...        primary_publication  provenience  \\\n","Q006206          Suhu  ...          Šamaš-reša-uṣur 1      Babylon   \n","Q006207          Suhu  ...          Šamaš-reša-uṣur 2    Sur Jureh   \n","Q006208          Suhu  ...          Šamaš-reša-uṣur 3    Sur Jureh   \n","Q006209          Suhu  ...          Šamaš-reša-uṣur 4          Ana   \n","Q006210          Suhu  ...       Šamaš-reša-uṣur 1001    Sur Jureh   \n","Q006211          Suhu  ...    Ninurta-kudurri-uṣur 01    Sur Jureh   \n","Q006212          Suhu  ...    Ninurta-kudurri-uṣur 02    Sur Jureh   \n","Q006213          Suhu  ...    Ninurta-kudurri-uṣur 03          Ana   \n","Q006214          Suhu  ...    Ninurta-kudurri-uṣur 04    Sur Jureh   \n","Q006215          Suhu  ...    Ninurta-kudurri-uṣur 05    Sur Jureh   \n","Q006216          Suhu  ...    Ninurta-kudurri-uṣur 06       Dawali   \n","Q006217          Suhu  ...    Ninurta-kudurri-uṣur 07    Sur Jureh   \n","Q006218          Suhu  ...    Ninurta-kudurri-uṣur 08    Sur Jureh   \n","Q006219          Suhu  ...    Ninurta-kudurri-uṣur 09          Ana   \n","Q006220          Suhu  ...    Ninurta-kudurri-uṣur 10          Ana   \n","Q006221          Suhu  ...    Ninurta-kudurri-uṣur 11    Sur Jureh   \n","Q006222          Suhu  ...    Ninurta-kudurri-uṣur 12    Sur Jureh   \n","Q006223          Suhu  ...    Ninurta-kudurri-uṣur 13    Sur Jureh   \n","Q006224          Suhu  ...    Ninurta-kudurri-uṣur 14     Judeideh   \n","Q006225          Suhu  ...  Ninurta-kudurri-uṣur 1001    Sur Jureh   \n","Q006226          Suhu  ...  Ninurta-kudurri-uṣur 1002      Zawiyeh   \n","Q006227          Suhu  ...     Unidentified Suhu 1001    Sur Jureh   \n","Q006228          Suhu  ...     Unidentified Suhu 1002    Sur Jureh   \n","Q006229          Suhu  ...     Unidentified Suhu 1003    Sur Jureh   \n","Q006230          Suhu  ...     Unidentified Suhu 1004    Sur Jureh   \n","Q006231          Suhu  ...     Unidentified Suhu 1005    Sur Jureh   \n","Q006232          Suhu  ...     Unidentified Suhu 1006       Gleieh   \n","Q006233          Suhu  ...     Unidentified Suhu 1007          Ana   \n","Q006234          Suhu  ...     Unidentified Suhu 1008  Tell Razzuq   \n","Q006235          Suhu  ...     Unidentified Suhu 1009       Gleieh   \n","Q006236          Suhu  ...     Unidentified Suhu 1010          Ana   \n","Q006237          Suhu  ...     Unidentified Suhu 1011          Ana   \n","Q006238          Suhu  ...     Unidentified Suhu 1012   Persepolis   \n","\n","                    pleiades_coord                 ruler          script  \\\n","Q006206      [44.422236,32.543395]       Šamaš-reša-uṣur  Neo-Babylonian   \n","Q006207      [42.205610,34.311256]       Šamaš-reša-uṣur  Neo-Babylonian   \n","Q006208      [42.205610,34.311256]       Šamaš-reša-uṣur  Neo-Babylonian   \n","Q006209      [41.978974,34.469451]       Šamaš-reša-uṣur  Neo-Babylonian   \n","Q006210      [42.205610,34.311256]       Šamaš-reša-uṣur  Neo-Babylonian   \n","Q006211      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006212      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006213      [41.978974,34.469451]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006214      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006215      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006216      [41.992053,34.453904]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006217      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006218      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006219      [41.978974,34.469451]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006220      [41.978974,34.469451]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006221      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006222      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006223      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006224        [42.028552,34.3887]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006225      [42.205610,34.311256]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006226      [42.175323,34.292103]  Ninurta-kudurri-uṣur  Neo-Babylonian   \n","Q006227      [42.205610,34.311256]             uncertain  Neo-Babylonian   \n","Q006228      [42.205610,34.311256]             uncertain  Neo-Babylonian   \n","Q006229      [42.205610,34.311256]             uncertain  Neo-Babylonian   \n","Q006230      [42.205610,34.311256]             uncertain  Neo-Babylonian   \n","Q006231      [42.205610,34.311256]             uncertain  Neo-Babylonian   \n","Q006232      [42.211404,34.302925]             uncertain  Neo-Babylonian   \n","Q006233      [41.978974,34.469451]             uncertain  Neo-Babylonian   \n","Q006234                        NaN             uncertain  Neo-Babylonian   \n","Q006235      [42.211404,34.302925]             uncertain  Neo-Babylonian   \n","Q006236      [41.978974,34.469451]             uncertain  Neo-Babylonian   \n","Q006237      [41.978974,34.469451]             uncertain  Neo-Babylonian   \n","Q006238  [52.889437,29.9353403333]             uncertain  Neo-Babylonian   \n","\n","        script_remarks script_type              subgenre supergenre trans  \n","Q006206      inscribed   Cuneiform    Shamash-resha-uṣur        LIT  [en]  \n","Q006207      inscribed   Cuneiform    Shamash-resha-uṣur        LIT  [en]  \n","Q006208      inscribed   Cuneiform    Shamash-resha-uṣur        LIT  [en]  \n","Q006209      inscribed   Cuneiform    Shamash-resha-uṣur        LIT  [en]  \n","Q006210      inscribed   Cuneiform    Shamash-resha-uṣur        LIT  [en]  \n","Q006211      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006212      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006213      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006214      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006215      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006216      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006217      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006218      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006219      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006220      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006221      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006222      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006223      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006224      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006225      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006226      inscribed   Cuneiform  Ninurta-kudurri-uṣur        LIT  [en]  \n","Q006227      inscribed   Cuneiform     Unidentified Suhu        LIT  [en]  \n","Q006228      inscribed   Cuneiform     Unidentified Suhu        LIT  [en]  \n","Q006229      inscribed   Cuneiform     Unidentified Suhu        LIT  [en]  \n","Q006230      inscribed   Cuneiform     Unidentified Suhu        LIT  [en]  \n","Q006231      inscribed   Cuneiform     Unidentified Suhu        LIT   NaN  \n","Q006232      inscribed   Cuneiform     Unidentified Suhu        LIT   NaN  \n","Q006233      inscribed   Cuneiform     Unidentified Suhu        LIT  [en]  \n","Q006234      inscribed   Cuneiform     Unidentified Suhu        LIT   NaN  \n","Q006235      inscribed   Cuneiform     Unidentified Suhu        LIT   NaN  \n","Q006236      inscribed   Cuneiform     Unidentified Suhu        LIT   NaN  \n","Q006237      inscribed   Cuneiform     Unidentified Suhu        LIT   NaN  \n","Q006238      inscribed   Cuneiform     Unidentified Suhu        LIT  [en]  \n","\n","[33 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-861c9bc3-ed1f-472d-9eed-9cebfd8ea708\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_text</th>\n","      <th>langs</th>\n","      <th>project</th>\n","      <th>cdli_id</th>\n","      <th>collection</th>\n","      <th>credits</th>\n","      <th>date_of_origin</th>\n","      <th>designation</th>\n","      <th>display_name</th>\n","      <th>dynastic_seat</th>\n","      <th>...</th>\n","      <th>primary_publication</th>\n","      <th>provenience</th>\n","      <th>pleiades_coord</th>\n","      <th>ruler</th>\n","      <th>script</th>\n","      <th>script_remarks</th>\n","      <th>script_type</th>\n","      <th>subgenre</th>\n","      <th>supergenre</th>\n","      <th>trans</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Q006206</th>\n","      <td>Q006206</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469149</td>\n","      <td>Arkeoloji Müzerleri, Istanbul, Turkey; Vordera...</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Šamaš-reša-uṣur 1</td>\n","      <td>Suhu Šamaš-reša-uṣur 1</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Šamaš-reša-uṣur 1</td>\n","      <td>Babylon</td>\n","      <td>[44.422236,32.543395]</td>\n","      <td>Šamaš-reša-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Shamash-resha-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006207</th>\n","      <td>Q006207</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469150</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Šamaš-reša-uṣur 2</td>\n","      <td>Suhu Šamaš-reša-uṣur 2</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Šamaš-reša-uṣur 2</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Šamaš-reša-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Shamash-resha-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006208</th>\n","      <td>Q006208</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469151</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Šamaš-reša-uṣur 3</td>\n","      <td>Suhu Šamaš-reša-uṣur 3</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Šamaš-reša-uṣur 3</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Šamaš-reša-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Shamash-resha-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006209</th>\n","      <td>Q006209</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469152</td>\n","      <td>NaN</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Šamaš-reša-uṣur 4</td>\n","      <td>Suhu Šamaš-reša-uṣur 4</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Šamaš-reša-uṣur 4</td>\n","      <td>Ana</td>\n","      <td>[41.978974,34.469451]</td>\n","      <td>Šamaš-reša-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Shamash-resha-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006210</th>\n","      <td>Q006210</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469153</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Šamaš-reša-uṣur 1001</td>\n","      <td>Suhu Šamaš-reša-uṣur 1001</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Šamaš-reša-uṣur 1001</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Šamaš-reša-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Shamash-resha-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006211</th>\n","      <td>Q006211</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469154</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 01</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 01</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 01</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006212</th>\n","      <td>Q006212</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469155</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 02</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 02</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 02</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006213</th>\n","      <td>Q006213</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469156</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 03</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 03</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 03</td>\n","      <td>Ana</td>\n","      <td>[41.978974,34.469451]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006214</th>\n","      <td>Q006214</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469157</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 04</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 04</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 04</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006215</th>\n","      <td>Q006215</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469158</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 05</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 05</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 05</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006216</th>\n","      <td>Q006216</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469159</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 06</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 06</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 06</td>\n","      <td>Dawali</td>\n","      <td>[41.992053,34.453904]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006217</th>\n","      <td>Q006217</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469160</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 07</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 07</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 07</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006218</th>\n","      <td>Q006218</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469161</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 08</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 08</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 08</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006219</th>\n","      <td>Q006219</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469162</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 09</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 09</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 09</td>\n","      <td>Ana</td>\n","      <td>[41.978974,34.469451]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006220</th>\n","      <td>Q006220</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469163</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 10</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 10</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 10</td>\n","      <td>Ana</td>\n","      <td>[41.978974,34.469451]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006221</th>\n","      <td>Q006221</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469166</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 11</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 11</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 11</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006222</th>\n","      <td>Q006222</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469167</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 12</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 12</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 12</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006223</th>\n","      <td>Q006223</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469168</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 13</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 13</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 13</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006224</th>\n","      <td>Q006224</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469169</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 14</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 14</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 14</td>\n","      <td>Judeideh</td>\n","      <td>[42.028552,34.3887]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006225</th>\n","      <td>Q006225</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469164</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 1001</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 1001</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 1001</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006226</th>\n","      <td>Q006226</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469165</td>\n","      <td>NaN</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Ninurta-kudurri-uṣur 1002</td>\n","      <td>Suhu Ninurta-kudurri-uṣur 1002</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Ninurta-kudurri-uṣur 1002</td>\n","      <td>Zawiyeh</td>\n","      <td>[42.175323,34.292103]</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006227</th>\n","      <td>Q006227</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469170</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1001</td>\n","      <td>Suhu Unidentified Suhu 1001</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1001</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006228</th>\n","      <td>Q006228</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469171</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1002</td>\n","      <td>Suhu Unidentified Suhu 1002</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1002</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006229</th>\n","      <td>Q006229</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469172</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1003</td>\n","      <td>Suhu Unidentified Suhu 1003</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1003</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006230</th>\n","      <td>Q006230</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469173</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1004</td>\n","      <td>Suhu Unidentified Suhu 1004</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1004</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006231</th>\n","      <td>Q006231</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469174</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1005</td>\n","      <td>Suhu Unidentified Suhu 1005</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1005</td>\n","      <td>Sur Jureh</td>\n","      <td>[42.205610,34.311256]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Q006232</th>\n","      <td>Q006232</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469175</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1006</td>\n","      <td>Suhu Unidentified Suhu 1006</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1006</td>\n","      <td>Gleieh</td>\n","      <td>[42.211404,34.302925]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Q006233</th>\n","      <td>Q006233</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469176</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1007</td>\n","      <td>Suhu Unidentified Suhu 1007</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1007</td>\n","      <td>Ana</td>\n","      <td>[41.978974,34.469451]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","    <tr>\n","      <th>Q006234</th>\n","      <td>Q006234</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469177</td>\n","      <td>Iraq Museum, Baghdad, Iraq</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1008</td>\n","      <td>Suhu Unidentified Suhu 1008</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1008</td>\n","      <td>Tell Razzuq</td>\n","      <td>NaN</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Q006235</th>\n","      <td>Q006235</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469178</td>\n","      <td>NaN</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1009</td>\n","      <td>Suhu Unidentified Suhu 1009</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1009</td>\n","      <td>Gleieh</td>\n","      <td>[42.211404,34.302925]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Q006236</th>\n","      <td>Q006236</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469179</td>\n","      <td>NaN</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1010</td>\n","      <td>Suhu Unidentified Suhu 1010</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1010</td>\n","      <td>Ana</td>\n","      <td>[41.978974,34.469451]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Q006237</th>\n","      <td>Q006237</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469180</td>\n","      <td>NaN</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1011</td>\n","      <td>Suhu Unidentified Suhu 1011</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1011</td>\n","      <td>Ana</td>\n","      <td>[41.978974,34.469451]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Q006238</th>\n","      <td>Q006238</td>\n","      <td>0x08000000</td>\n","      <td>suhu</td>\n","      <td>P469181</td>\n","      <td>Oriental Institute, University of Chicago, Chi...</td>\n","      <td>Based on Grant Frame, Rulers of Babylonia: Fro...</td>\n","      <td>early 8th century</td>\n","      <td>Unidentified Suhu 1012</td>\n","      <td>Suhu Unidentified Suhu 1012</td>\n","      <td>Suhu</td>\n","      <td>...</td>\n","      <td>Unidentified Suhu 1012</td>\n","      <td>Persepolis</td>\n","      <td>[52.889437,29.9353403333]</td>\n","      <td>uncertain</td>\n","      <td>Neo-Babylonian</td>\n","      <td>inscribed</td>\n","      <td>Cuneiform</td>\n","      <td>Unidentified Suhu</td>\n","      <td>LIT</td>\n","      <td>[en]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>33 rows × 30 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-861c9bc3-ed1f-472d-9eed-9cebfd8ea708')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-861c9bc3-ed1f-472d-9eed-9cebfd8ea708 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-861c9bc3-ed1f-472d-9eed-9cebfd8ea708');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["# changing the frame to co mention - win \n","df_nodelist_old = words_df[( (words_df.epos == \"PN\") | (words_df.epos == \"DN\") | (words_df.epos == \"RN\")) ]\n","\n","\"\"\" add the 'id_text' +'id_word' + 'norm1' + 'lemma' into a new data frame (df_nodelist)\n","add each 'id_word' to one of two columns: 'source', 'target' in a new data frame (df_edgelist).\"\"\"\n","size = df_nodelist_old.shape[0]\n","print(\"How many rows: \",size, \"\\nHow many columns: \", df_nodelist_old.shape[1])\n"],"metadata":{"id":"dYjYDPdoIeJZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669051508828,"user_tz":480,"elapsed":159,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"025fab83-81e0-4843-d18a-e25e5640393a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["How many rows:  222 \n","How many columns:  16\n"]}]},{"cell_type":"code","source":["# keeping only certain columns\n","\n","drop = ['lang', 'form', 'delim', 'gdl', 'cf', 'gw' ,'sense', 'norm', 'pos' ,  \n","        'label','id_line']\n","\n","df_nodelist = df_nodelist_old.drop(drop,axis = 1)\n","df_nodelist = df_nodelist.copy()\n","\n","df_nodelist.insert(5, \"ancient_recipient\", \"\")\n","df_nodelist.insert(5, \"ancient_author\", \"\")\n","df_nodelist.insert(5, \"occurencebracket\", \"\")\n","\n","df_nodelist.rename(columns = {'id_word':'Id'}, inplace = True)\n","df_nodelist.rename(columns = {'norm1':'Label'}, inplace = True)\n","\n","df_nodelist['occurencebracket'] = df_nodelist['lemma'].str.extract(r\"\\[([0-9 _]+)\\]\")\n"],"metadata":{"id":"ih8s6MlikggG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#dedup\n","df_nodelist = df_nodelist.drop_duplicates(subset=['id_text', 'lemma'], keep='first')"],"metadata":{"id":"m1IWJIcG0tT-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nodesize = df_nodelist.shape[0]\n","catsizeold = df_cat.shape[0]\n","\n","print(\"nodesize: \",nodesize)\n","print(\"catsizeold: \",catsizeold)\n","\n"],"metadata":{"id":"yxTzcOrCdXus","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669051537246,"user_tz":480,"elapsed":1,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"67ff869a-188f-44f3-fac0-c2dbd8e59b81"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["nodesize:  131\n","catsizeold:  33\n"]}]},{"cell_type":"code","source":["for i in range(nodesize):\n","  df_nodelist.iat[i,0] = df_nodelist.iloc[i][\"Id\"].replace(\".\", \"\")\n","\n","df_nodelist"],"metadata":{"id":"FyzYAxIVimWM","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1669051538640,"user_tz":480,"elapsed":6,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"4dab9bf3-795d-432a-91f6-3af521473abc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Id  id_text epos                 Label  \\\n","1      Q00622622  Q006226   RN  Ninurta-kudurri-uṣur   \n","4      Q00622632  Q006226   DN                  Adad   \n","7      Q00622112  Q006221   DN                  Adad   \n","9      Q00622114  Q006221   DN             Apla-Adad   \n","39     Q00622163  Q006221   DN                  Anim   \n","...          ...      ...  ...                   ...   \n","5186   Q00621971  Q006219   RN                Tabnea   \n","5263  Q006219241  Q006219   RN          Iqiša-Marduk   \n","5265  Q006219243  Q006219   RN           Nashir-Adad   \n","5292  Q006219311  Q006219   DN                  Adad   \n","5294  Q006219313  Q006219   DN             Apla-Adad   \n","\n","                                         lemma occurencebracket  \\\n","1     Ninurta-kudurri-uṣur[governor-of-Suhu]RN              NaN   \n","4                            Adad[storm-god]DN              NaN   \n","7                            Adad[storm-god]DN              NaN   \n","9                               Apla-Adad[1]DN                1   \n","39                              Anu[sky-god]DN              NaN   \n","...                                        ...              ...   \n","5186                Tabnea[governor-of-Suhu]RN              NaN   \n","5263          Iqiša-Marduk[governor-of-Suhu]RN              NaN   \n","5265           Nashir-Adad[governor-of-Suhu]RN              NaN   \n","5292                         Adad[storm-god]DN              NaN   \n","5294                            Apla-Adad[1]DN                1   \n","\n","     ancient_author ancient_recipient  \n","1                                      \n","4                                      \n","7                                      \n","9                                      \n","39                                     \n","...             ...               ...  \n","5186                                   \n","5263                                   \n","5265                                   \n","5292                                   \n","5294                                   \n","\n","[131 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-baddc77a-2e9b-4b1b-8979-22872fce9386\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>id_text</th>\n","      <th>epos</th>\n","      <th>Label</th>\n","      <th>lemma</th>\n","      <th>occurencebracket</th>\n","      <th>ancient_author</th>\n","      <th>ancient_recipient</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Q00622622</td>\n","      <td>Q006226</td>\n","      <td>RN</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Ninurta-kudurri-uṣur[governor-of-Suhu]RN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Q00622632</td>\n","      <td>Q006226</td>\n","      <td>DN</td>\n","      <td>Adad</td>\n","      <td>Adad[storm-god]DN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Q00622112</td>\n","      <td>Q006221</td>\n","      <td>DN</td>\n","      <td>Adad</td>\n","      <td>Adad[storm-god]DN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Q00622114</td>\n","      <td>Q006221</td>\n","      <td>DN</td>\n","      <td>Apla-Adad</td>\n","      <td>Apla-Adad[1]DN</td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Q00622163</td>\n","      <td>Q006221</td>\n","      <td>DN</td>\n","      <td>Anim</td>\n","      <td>Anu[sky-god]DN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5186</th>\n","      <td>Q00621971</td>\n","      <td>Q006219</td>\n","      <td>RN</td>\n","      <td>Tabnea</td>\n","      <td>Tabnea[governor-of-Suhu]RN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>5263</th>\n","      <td>Q006219241</td>\n","      <td>Q006219</td>\n","      <td>RN</td>\n","      <td>Iqiša-Marduk</td>\n","      <td>Iqiša-Marduk[governor-of-Suhu]RN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>5265</th>\n","      <td>Q006219243</td>\n","      <td>Q006219</td>\n","      <td>RN</td>\n","      <td>Nashir-Adad</td>\n","      <td>Nashir-Adad[governor-of-Suhu]RN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>5292</th>\n","      <td>Q006219311</td>\n","      <td>Q006219</td>\n","      <td>DN</td>\n","      <td>Adad</td>\n","      <td>Adad[storm-god]DN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>5294</th>\n","      <td>Q006219313</td>\n","      <td>Q006219</td>\n","      <td>DN</td>\n","      <td>Apla-Adad</td>\n","      <td>Apla-Adad[1]DN</td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>131 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-baddc77a-2e9b-4b1b-8979-22872fce9386')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-baddc77a-2e9b-4b1b-8979-22872fce9386 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-baddc77a-2e9b-4b1b-8979-22872fce9386');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["##this requires reviewing (the row numbers are the id text)"],"metadata":{"id":"XckVnR2YMKoY"}},{"cell_type":"code","source":["#designation, subgenre, period, provenience, archive matching\n","for j in range(df_cat.shape[0]):\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,0]),\"designation\"] = df_cat.iloc[j][\"designation\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,0]),\"subgenre\"] = df_cat.iloc[j][\"subgenre\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,0]),\"period\"] = df_cat.iloc[j][\"period\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,0]),\"provenience\"] = df_cat.iloc[j][\"provenience\"]\n"],"metadata":{"id":"PYDZv-fm2kVH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_nodelist"],"metadata":{"id":"uVUCYpVvuLw5","colab":{"base_uri":"https://localhost:8080/","height":815},"executionInfo":{"status":"ok","timestamp":1669051595667,"user_tz":480,"elapsed":169,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"a2d036bf-70fb-4025-a21d-36de62b08f41"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Id  id_text epos                 Label  \\\n","1      Q00622622  Q006226   RN  Ninurta-kudurri-uṣur   \n","4      Q00622632  Q006226   DN                  Adad   \n","7      Q00622112  Q006221   DN                  Adad   \n","9      Q00622114  Q006221   DN             Apla-Adad   \n","39     Q00622163  Q006221   DN                  Anim   \n","...          ...      ...  ...                   ...   \n","5186   Q00621971  Q006219   RN                Tabnea   \n","5263  Q006219241  Q006219   RN          Iqiša-Marduk   \n","5265  Q006219243  Q006219   RN           Nashir-Adad   \n","5292  Q006219311  Q006219   DN                  Adad   \n","5294  Q006219313  Q006219   DN             Apla-Adad   \n","\n","                                         lemma occurencebracket  \\\n","1     Ninurta-kudurri-uṣur[governor-of-Suhu]RN              NaN   \n","4                            Adad[storm-god]DN              NaN   \n","7                            Adad[storm-god]DN              NaN   \n","9                               Apla-Adad[1]DN                1   \n","39                              Anu[sky-god]DN              NaN   \n","...                                        ...              ...   \n","5186                Tabnea[governor-of-Suhu]RN              NaN   \n","5263          Iqiša-Marduk[governor-of-Suhu]RN              NaN   \n","5265           Nashir-Adad[governor-of-Suhu]RN              NaN   \n","5292                         Adad[storm-god]DN              NaN   \n","5294                            Apla-Adad[1]DN                1   \n","\n","     ancient_author ancient_recipient                designation  \\\n","1                                      Ninurta-kudurri-uṣur 1002   \n","4                                      Ninurta-kudurri-uṣur 1002   \n","7                                        Ninurta-kudurri-uṣur 11   \n","9                                        Ninurta-kudurri-uṣur 11   \n","39                                       Ninurta-kudurri-uṣur 11   \n","...             ...               ...                        ...   \n","5186                                     Ninurta-kudurri-uṣur 09   \n","5263                                     Ninurta-kudurri-uṣur 09   \n","5265                                     Ninurta-kudurri-uṣur 09   \n","5292                                     Ninurta-kudurri-uṣur 09   \n","5294                                     Ninurta-kudurri-uṣur 09   \n","\n","                  subgenre          period provenience  \n","1     Ninurta-kudurri-uṣur  Neo-Babylonian     Zawiyeh  \n","4     Ninurta-kudurri-uṣur  Neo-Babylonian     Zawiyeh  \n","7     Ninurta-kudurri-uṣur  Neo-Babylonian   Sur Jureh  \n","9     Ninurta-kudurri-uṣur  Neo-Babylonian   Sur Jureh  \n","39    Ninurta-kudurri-uṣur  Neo-Babylonian   Sur Jureh  \n","...                    ...             ...         ...  \n","5186  Ninurta-kudurri-uṣur  Neo-Babylonian         Ana  \n","5263  Ninurta-kudurri-uṣur  Neo-Babylonian         Ana  \n","5265  Ninurta-kudurri-uṣur  Neo-Babylonian         Ana  \n","5292  Ninurta-kudurri-uṣur  Neo-Babylonian         Ana  \n","5294  Ninurta-kudurri-uṣur  Neo-Babylonian         Ana  \n","\n","[131 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-890da38d-cd45-4455-9e93-3acd678db936\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>id_text</th>\n","      <th>epos</th>\n","      <th>Label</th>\n","      <th>lemma</th>\n","      <th>occurencebracket</th>\n","      <th>ancient_author</th>\n","      <th>ancient_recipient</th>\n","      <th>designation</th>\n","      <th>subgenre</th>\n","      <th>period</th>\n","      <th>provenience</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Q00622622</td>\n","      <td>Q006226</td>\n","      <td>RN</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Ninurta-kudurri-uṣur[governor-of-Suhu]RN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 1002</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Zawiyeh</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Q00622632</td>\n","      <td>Q006226</td>\n","      <td>DN</td>\n","      <td>Adad</td>\n","      <td>Adad[storm-god]DN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 1002</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Zawiyeh</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Q00622112</td>\n","      <td>Q006221</td>\n","      <td>DN</td>\n","      <td>Adad</td>\n","      <td>Adad[storm-god]DN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 11</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Sur Jureh</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Q00622114</td>\n","      <td>Q006221</td>\n","      <td>DN</td>\n","      <td>Apla-Adad</td>\n","      <td>Apla-Adad[1]DN</td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 11</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Sur Jureh</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Q00622163</td>\n","      <td>Q006221</td>\n","      <td>DN</td>\n","      <td>Anim</td>\n","      <td>Anu[sky-god]DN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 11</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Sur Jureh</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5186</th>\n","      <td>Q00621971</td>\n","      <td>Q006219</td>\n","      <td>RN</td>\n","      <td>Tabnea</td>\n","      <td>Tabnea[governor-of-Suhu]RN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 09</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Ana</td>\n","    </tr>\n","    <tr>\n","      <th>5263</th>\n","      <td>Q006219241</td>\n","      <td>Q006219</td>\n","      <td>RN</td>\n","      <td>Iqiša-Marduk</td>\n","      <td>Iqiša-Marduk[governor-of-Suhu]RN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 09</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Ana</td>\n","    </tr>\n","    <tr>\n","      <th>5265</th>\n","      <td>Q006219243</td>\n","      <td>Q006219</td>\n","      <td>RN</td>\n","      <td>Nashir-Adad</td>\n","      <td>Nashir-Adad[governor-of-Suhu]RN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 09</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Ana</td>\n","    </tr>\n","    <tr>\n","      <th>5292</th>\n","      <td>Q006219311</td>\n","      <td>Q006219</td>\n","      <td>DN</td>\n","      <td>Adad</td>\n","      <td>Adad[storm-god]DN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 09</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Ana</td>\n","    </tr>\n","    <tr>\n","      <th>5294</th>\n","      <td>Q006219313</td>\n","      <td>Q006219</td>\n","      <td>DN</td>\n","      <td>Apla-Adad</td>\n","      <td>Apla-Adad[1]DN</td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td>Ninurta-kudurri-uṣur 09</td>\n","      <td>Ninurta-kudurri-uṣur</td>\n","      <td>Neo-Babylonian</td>\n","      <td>Ana</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>131 rows × 12 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-890da38d-cd45-4455-9e93-3acd678db936')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-890da38d-cd45-4455-9e93-3acd678db936 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-890da38d-cd45-4455-9e93-3acd678db936');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["#saving the df node_list\n","node = pd.DataFrame(df_nodelist) "],"metadata":{"id":"O61EyzA8pyub"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(df_nodelist) \n","    \n","# saving the dataframe \n","f = \"SUHU_result_df_nodelist_dedup.csv\"\n","\n","with open(folder+f, 'w', encoding = 'utf-8-sig') as f:\n","  df.to_csv(f) "],"metadata":{"id":"kJsDiEOkdbdC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#list of unique id text\n","textlist = df_nodelist.id_text.unique()\n","print(\"HOW MANY DIFFERENT TEXTS:\",len(textlist))"],"metadata":{"id":"3QunbkOHz5TB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669053197178,"user_tz":480,"elapsed":151,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"bb20fdda-4f8e-4c36-8753-d0ddb55ef27d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["HOW MANY DIFFERENT TEXTS: 21\n"]}]},{"cell_type":"code","source":["#create frame for edgelist\n","import pandas as pd \n","d = {'Id': [], 'id_text': [], 'weight': [], 'Source': [], 'Target': [], 'Type': []}\n","df_edgelist = pd.DataFrame(data=d)\n","df_edgelist\n"],"metadata":{"id":"QMAM5S6vUolN","colab":{"base_uri":"https://localhost:8080/","height":49},"executionInfo":{"status":"ok","timestamp":1669053197777,"user_tz":480,"elapsed":2,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"5385aa7e-62d4-4d3a-e2d2-acfea501876b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [Id, id_text, weight, Source, Target, Type]\n","Index: []"],"text/html":["\n","  <div id=\"df-b5ea1ac5-5b1a-45a4-9568-f7b54d25fce5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>id_text</th>\n","      <th>weight</th>\n","      <th>Source</th>\n","      <th>Target</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5ea1ac5-5b1a-45a4-9568-f7b54d25fce5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b5ea1ac5-5b1a-45a4-9568-f7b54d25fce5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b5ea1ac5-5b1a-45a4-9568-f7b54d25fce5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["start = 0\n","end = len(textlist)\n","\n","for k in range(start,end):\n","  match = df_nodelist.loc[df_nodelist['id_text'] == textlist[k]]\n","  length = len(match)\n","  counteredge = 0\n","  for i in range(length):\n","    id = match.iloc[i][\"Id\"]\n","    idt = match.iloc[i][\"id_text\"]\n","    for j in range(length):\n","      if i != j:\n","        #print(match.iloc[i]['Id'],match.iloc[j]['Id'])\n","        df_edgelist.loc[len(df_edgelist.index)] = [\"\", idt, 1.0,\n","                                                 id, match.iloc[j][\"Id\"], \"undirected\"] \n","        counteredge += 1\n","        \n","  print(\"Current progress: \",np.round((k-start)/(end-start)*100,2),'%', \"----> Iteration:\",k)\n","  print(\"NODES:\", length, \"EDGES: \", counteredge)\n","  print(\"==========\")\n","\n","      \n","  "],"metadata":{"id":"Zs_srJAOB_o0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669053204230,"user_tz":480,"elapsed":4744,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"bff841d9-a90f-46ed-f776-85522a59017f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Current progress:  0.0 % ----> Iteration: 0\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  4.76 % ----> Iteration: 1\n","NODES: 8 EDGES:  56\n","==========\n","Current progress:  9.52 % ----> Iteration: 2\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  14.29 % ----> Iteration: 3\n","NODES: 17 EDGES:  272\n","==========\n","Current progress:  19.05 % ----> Iteration: 4\n","NODES: 9 EDGES:  72\n","==========\n","Current progress:  23.81 % ----> Iteration: 5\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  28.57 % ----> Iteration: 6\n","NODES: 3 EDGES:  6\n","==========\n","Current progress:  33.33 % ----> Iteration: 7\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  38.1 % ----> Iteration: 8\n","NODES: 7 EDGES:  42\n","==========\n","Current progress:  42.86 % ----> Iteration: 9\n","NODES: 16 EDGES:  240\n","==========\n","Current progress:  47.62 % ----> Iteration: 10\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  52.38 % ----> Iteration: 11\n","NODES: 7 EDGES:  42\n","==========\n","Current progress:  57.14 % ----> Iteration: 12\n","NODES: 4 EDGES:  12\n","==========\n","Current progress:  61.9 % ----> Iteration: 13\n","NODES: 5 EDGES:  20\n","==========\n","Current progress:  66.67 % ----> Iteration: 14\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  71.43 % ----> Iteration: 15\n","NODES: 8 EDGES:  56\n","==========\n","Current progress:  76.19 % ----> Iteration: 16\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  80.95 % ----> Iteration: 17\n","NODES: 9 EDGES:  72\n","==========\n","Current progress:  85.71 % ----> Iteration: 18\n","NODES: 7 EDGES:  42\n","==========\n","Current progress:  90.48 % ----> Iteration: 19\n","NODES: 9 EDGES:  72\n","==========\n","Current progress:  95.24 % ----> Iteration: 20\n","NODES: 10 EDGES:  90\n","==========\n"]}]},{"cell_type":"code","source":["df = pd.DataFrame(df_edgelist) \n","    \n","f = \"SUHUresult\"+str(start)+\"_\"+str(end)+\"result_df_edgelist.csv\"\n","\n","with open(folder+f, 'w', encoding = 'utf-8-sig') as f:\n","  df.to_csv(f) \n"],"metadata":{"id":"aUmicTQBODTG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#other"],"metadata":{"id":"Z-hrWGV_I2I4"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":140,"referenced_widgets":["31d347f7d24b4d8d8946b04d57d8e13e","cbcb02739a3d43b580ae84bcba6699a5","efaa6d3f6bc04e24b8d0d40bf53dd9e6","0ad4d58322524655b24e11c64bef27c1","436cc0c578e140648079dabbd77bf4f5","d368a4e52f6147d98c7949ebe4c19513","bbab20026d32453d954bf8daa43ce707","2226a26237114c1ab79030fbb64bac8b","35deafd0e80944aeb4c039c059226878","6b6f6d120475473aab9cdabacbfcb22c","23d27b90a21d496d889f8067861dbcc2"]},"id":"ivkbbFyeOJkh","executionInfo":{"status":"ok","timestamp":1667944214717,"user_tz":480,"elapsed":1142,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"5e479fc3-47ec-4232-d505-3d988938c018"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\n","  InsecureRequestWarning)\n"]},{"output_type":"stream","name":"stdout","text":["Saving http://oracc.org/akklove/json/akklove.zip as jsonzip/akklove.zip.\n"]},{"output_type":"display_data","data":{"text/plain":["akklove: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"31d347f7d24b4d8d8946b04d57d8e13e"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["['akklove']"]},"metadata":{},"execution_count":87}],"source":["os.chdir(folder + 'network/')\n","\n","projects = [\n","      'akklove'\n","\n","]\n","projects = oracc_download(projects,'?') #DOWNLOAD REDUNDANCY\n","projects"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-8xsPIH4OJkn","executionInfo":{"status":"ok","timestamp":1667944217671,"user_tz":480,"elapsed":389,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"076e9ba4-6154-4664-baa7-5cb514b7ac6f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Project: akklove\n"]},{"output_type":"stream","name":"stderr","text":["\n","100%|██████████| 32/32 [00:00<00:00, 329.84it/s]\n"]}],"source":["lemm_l = []\n","meta_d = {\"label\": None, \"id_text\": None}\n","dollar_keys = [\"extent\", \"scope\", \"state\"]\n","\n","df_cat = pd.DataFrame()\n","used_pnums = []\n","cat_d = {}\n","for project in projects:\n","  print('Project: ' + str(project))\n","  z = zipfile.ZipFile('jsonzip/' + project.replace('/','-') + '.zip')\n","  #print(file + \" does not exist or is not a proper ZIP file\")\n","  files = z.namelist()     # list of all the files in the ZIP\n","  files = [name for name in files if \"corpusjson\" in name and name[-5:] == '.json']\n","  cat_file = z.read(project + '/catalogue.json').decode('utf-8')\n","  cat_json = json.loads(cat_file)\n","  cat_d.update(dict(cat_json['members']))\n","  #df_cat = pd.concat([df_cat,pd.DataFrame(cat_json['members']).T])                          #that holds all the P, Q, and X numbers.\n","\n","  for filename in tqdm(files):       #iterate over the file names\n","      id_text = filename[-12:-5]\n","      if id_text in used_pnums:\n","        continue\n","      else:\n","        used_pnums.append(id_text)\n","      meta_d[\"id_text\"] = id_text\n","\n","      st = z.read(filename).decode('utf-8')         #read and decode the json file of one particular text\n","      data_json = json.loads(st)                # make it into a json object (essentially a dictionary)\n","      #print(str(data_json))\n","      parsejson(data_json)               # and send to the parsejson() function\n","  z.close()\n","\n","df_cat = pd.DataFrame(cat_d).T\n","words_df = pd.DataFrame(lemm_l)\n","#words_df\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":818},"executionInfo":{"elapsed":316,"status":"ok","timestamp":1667944220294,"user":{"displayName":"Win Moe","userId":"04864470597207248853"},"user_tz":480},"outputId":"03b5dafb-fadd-4494-e270-5e5694d651db","id":"OBdiTdhMOJko"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              lang              form delim  \\\n","0     akk-x-oldbab              i-na         \n","1     akk-x-oldbab            nu-ur₂         \n","2     akk-x-oldbab        a-pa-ti-im         \n","3     akk-x-oldbab        i-zi-iz-zi         \n","4     akk-x-oldbab            šum-ma         \n","...            ...               ...   ...   \n","5040  akk-x-oldakk       ṣa-wa-ar-ki         \n","5041  akk-x-oldakk                la         \n","5042  akk-x-oldakk         e-tam₂-da         \n","5043  akk-x-oldakk                la         \n","5044  akk-x-oldakk  ta₂-pa₂-ša-hi-ni         \n","\n","                                                    gdl      cf         gw  \\\n","0     [{'v': 'i', 'id': 'P252332.3.1.0', 'break': 'd...     ina         in   \n","1     [{'v': 'nu', 'id': 'P252332.3.2.0', 'delim': '...    nūru      light   \n","2     [{'v': 'a', 'id': 'P252332.3.3.0', 'delim': '-...    aptu     window   \n","3     [{'v': 'i', 'id': 'P252332.3.4.0', 'delim': '-...  izuzzu      stand   \n","4     [{'v': 'šum', 'id': 'P252332.4.1.0', 'delim': ...   šumma         if   \n","...                                                 ...     ...        ...   \n","5040  [{'v': 'ṣa', 'id': 'P285640.39.2.0', 'delim': ...  ṣawāru       neck   \n","5041              [{'v': 'la', 'id': 'P285640.40.1.0'}]      lā        not   \n","5042  [{'v': 'e', 'id': 'P285640.40.2.0', 'delim': '...   emēdu    lean-on   \n","5043              [{'v': 'la', 'id': 'P285640.41.1.0'}]      lā        not   \n","5044  [{'v': 'ta₂', 'id': 'P285640.41.2.0', 'delim':...  pašāhu  cool-down   \n","\n","                          sense         norm  pos epos       id_word label  \\\n","0                            in          ina  PRP  PRP   P252332.3.1   o 1   \n","1                         light          nūr    N    N   P252332.3.2   o 1   \n","2                        window       apātim    N    N   P252332.3.3   o 1   \n","3                         stand       izizzī    V    V   P252332.3.4   o 1   \n","4                            if        šumma  MOD  MOD   P252332.4.1   o 2   \n","...                         ...          ...  ...  ...           ...   ...   \n","5040                       neck      ṣawārki    N    N  P285640.39.2  r 36   \n","5041                        not           lā  MOD  MOD  P285640.40.1  r 37   \n","5042  continually-join-together      ettāmdā    V    V  P285640.40.2  r 37   \n","5043                        not           lā  MOD  MOD  P285640.41.1  r 38   \n","5044                 find-peace  tapaššahīni    V    V  P285640.41.2  r 38   \n","\n","      id_text extent scope state  id_line        norm1               lemma  \n","0     P252332                           3          ina          ina[in]PRP  \n","1     P252332                           3          nūr        nūru[light]N  \n","2     P252332                           3       apātim       aptu[window]N  \n","3     P252332                           3       izizzī      izuzzu[stand]V  \n","4     P252332                           4        šumma        šumma[if]MOD  \n","...       ...    ...   ...   ...      ...          ...                 ...  \n","5040  P285640                          39      ṣawārki       ṣawāru[neck]N  \n","5041  P285640                          40           lā          lā[not]MOD  \n","5042  P285640                          40      ettāmdā     emēdu[lean-on]V  \n","5043  P285640                          41           lā          lā[not]MOD  \n","5044  P285640                          41  tapaššahīni  pašāhu[cool-down]V  \n","\n","[5045 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-180b2b06-830f-484f-bb44-609778119d12\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lang</th>\n","      <th>form</th>\n","      <th>delim</th>\n","      <th>gdl</th>\n","      <th>cf</th>\n","      <th>gw</th>\n","      <th>sense</th>\n","      <th>norm</th>\n","      <th>pos</th>\n","      <th>epos</th>\n","      <th>id_word</th>\n","      <th>label</th>\n","      <th>id_text</th>\n","      <th>extent</th>\n","      <th>scope</th>\n","      <th>state</th>\n","      <th>id_line</th>\n","      <th>norm1</th>\n","      <th>lemma</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>akk-x-oldbab</td>\n","      <td>i-na</td>\n","      <td></td>\n","      <td>[{'v': 'i', 'id': 'P252332.3.1.0', 'break': 'd...</td>\n","      <td>ina</td>\n","      <td>in</td>\n","      <td>in</td>\n","      <td>ina</td>\n","      <td>PRP</td>\n","      <td>PRP</td>\n","      <td>P252332.3.1</td>\n","      <td>o 1</td>\n","      <td>P252332</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>3</td>\n","      <td>ina</td>\n","      <td>ina[in]PRP</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>akk-x-oldbab</td>\n","      <td>nu-ur₂</td>\n","      <td></td>\n","      <td>[{'v': 'nu', 'id': 'P252332.3.2.0', 'delim': '...</td>\n","      <td>nūru</td>\n","      <td>light</td>\n","      <td>light</td>\n","      <td>nūr</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>P252332.3.2</td>\n","      <td>o 1</td>\n","      <td>P252332</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>3</td>\n","      <td>nūr</td>\n","      <td>nūru[light]N</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>akk-x-oldbab</td>\n","      <td>a-pa-ti-im</td>\n","      <td></td>\n","      <td>[{'v': 'a', 'id': 'P252332.3.3.0', 'delim': '-...</td>\n","      <td>aptu</td>\n","      <td>window</td>\n","      <td>window</td>\n","      <td>apātim</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>P252332.3.3</td>\n","      <td>o 1</td>\n","      <td>P252332</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>3</td>\n","      <td>apātim</td>\n","      <td>aptu[window]N</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>akk-x-oldbab</td>\n","      <td>i-zi-iz-zi</td>\n","      <td></td>\n","      <td>[{'v': 'i', 'id': 'P252332.3.4.0', 'delim': '-...</td>\n","      <td>izuzzu</td>\n","      <td>stand</td>\n","      <td>stand</td>\n","      <td>izizzī</td>\n","      <td>V</td>\n","      <td>V</td>\n","      <td>P252332.3.4</td>\n","      <td>o 1</td>\n","      <td>P252332</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>3</td>\n","      <td>izizzī</td>\n","      <td>izuzzu[stand]V</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>akk-x-oldbab</td>\n","      <td>šum-ma</td>\n","      <td></td>\n","      <td>[{'v': 'šum', 'id': 'P252332.4.1.0', 'delim': ...</td>\n","      <td>šumma</td>\n","      <td>if</td>\n","      <td>if</td>\n","      <td>šumma</td>\n","      <td>MOD</td>\n","      <td>MOD</td>\n","      <td>P252332.4.1</td>\n","      <td>o 2</td>\n","      <td>P252332</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>4</td>\n","      <td>šumma</td>\n","      <td>šumma[if]MOD</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5040</th>\n","      <td>akk-x-oldakk</td>\n","      <td>ṣa-wa-ar-ki</td>\n","      <td></td>\n","      <td>[{'v': 'ṣa', 'id': 'P285640.39.2.0', 'delim': ...</td>\n","      <td>ṣawāru</td>\n","      <td>neck</td>\n","      <td>neck</td>\n","      <td>ṣawārki</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>P285640.39.2</td>\n","      <td>r 36</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>39</td>\n","      <td>ṣawārki</td>\n","      <td>ṣawāru[neck]N</td>\n","    </tr>\n","    <tr>\n","      <th>5041</th>\n","      <td>akk-x-oldakk</td>\n","      <td>la</td>\n","      <td></td>\n","      <td>[{'v': 'la', 'id': 'P285640.40.1.0'}]</td>\n","      <td>lā</td>\n","      <td>not</td>\n","      <td>not</td>\n","      <td>lā</td>\n","      <td>MOD</td>\n","      <td>MOD</td>\n","      <td>P285640.40.1</td>\n","      <td>r 37</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>40</td>\n","      <td>lā</td>\n","      <td>lā[not]MOD</td>\n","    </tr>\n","    <tr>\n","      <th>5042</th>\n","      <td>akk-x-oldakk</td>\n","      <td>e-tam₂-da</td>\n","      <td></td>\n","      <td>[{'v': 'e', 'id': 'P285640.40.2.0', 'delim': '...</td>\n","      <td>emēdu</td>\n","      <td>lean-on</td>\n","      <td>continually-join-together</td>\n","      <td>ettāmdā</td>\n","      <td>V</td>\n","      <td>V</td>\n","      <td>P285640.40.2</td>\n","      <td>r 37</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>40</td>\n","      <td>ettāmdā</td>\n","      <td>emēdu[lean-on]V</td>\n","    </tr>\n","    <tr>\n","      <th>5043</th>\n","      <td>akk-x-oldakk</td>\n","      <td>la</td>\n","      <td></td>\n","      <td>[{'v': 'la', 'id': 'P285640.41.1.0'}]</td>\n","      <td>lā</td>\n","      <td>not</td>\n","      <td>not</td>\n","      <td>lā</td>\n","      <td>MOD</td>\n","      <td>MOD</td>\n","      <td>P285640.41.1</td>\n","      <td>r 38</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>41</td>\n","      <td>lā</td>\n","      <td>lā[not]MOD</td>\n","    </tr>\n","    <tr>\n","      <th>5044</th>\n","      <td>akk-x-oldakk</td>\n","      <td>ta₂-pa₂-ša-hi-ni</td>\n","      <td></td>\n","      <td>[{'v': 'ta₂', 'id': 'P285640.41.2.0', 'delim':...</td>\n","      <td>pašāhu</td>\n","      <td>cool-down</td>\n","      <td>find-peace</td>\n","      <td>tapaššahīni</td>\n","      <td>V</td>\n","      <td>V</td>\n","      <td>P285640.41.2</td>\n","      <td>r 38</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>41</td>\n","      <td>tapaššahīni</td>\n","      <td>pašāhu[cool-down]V</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5045 rows × 19 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-180b2b06-830f-484f-bb44-609778119d12')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-180b2b06-830f-484f-bb44-609778119d12 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-180b2b06-830f-484f-bb44-609778119d12');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":89}],"source":["words_df = words_df.fillna('')   # replace NaN (Not a Number) with empty string\n","\n","findreplace = {' ' : '-', ',' : ''}\n","words_df = words_df.replace({'gw' : findreplace, 'sense' : findreplace}, regex=True)\n","\n","words_df['id_line'] = [int(wordid.split('.')[1]) for wordid in words_df['id_word']]\n","\n","words_df[\"norm1\"] = words_df[\"norm\"]\n","words_df.loc[words_df[\"norm1\"] == \"\" , 'norm1'] = words_df['form']\n","\n","words_df['lemma'] = words_df[\"cf\"] + \"[\" + words_df[\"gw\"] + \"]\" + words_df[\"pos\"]\n","words_df.loc[words_df[\"cf\"] == \"\" , 'lemma'] = words_df['form'] + \"[NA]NA\"\n","words_df.loc[words_df[\"form\"] == \"\", 'lemma'] = \"\"\n","\n","#words_df = words_df.merge(df_cat[['dossier_list']],how='left',left_on='id_text',right_index=True)\n","\n","d = words_df.to_dict(orient='index')\n","\n","words_df"]},{"cell_type":"code","source":["#df cat\n","df_cat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667944225064,"user_tz":480,"elapsed":106,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"8b596e0b-7ee5-464d-e463-6bf46612a8ef","id":"KaiqrESoOJko"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["P251711    0x08000000\n","P251898    0x08000000\n","P252006    0x08000000\n","P252071    0x08000000\n","P252226    0x08000000\n","P252332    0x08000000\n","P254179    0x08000000\n","P274691    0x08000000\n","P282615    0x08000000\n","P285640    0x08000000\n","P296059    0x08000000\n","P305832    0x08000000\n","P305850    0x08000000\n","P355910    0x08000000\n","P392087    0x08000000\n","P413919    0x08000000\n","P424004    0x08000000\n","P429343    0x08000000\n","P439053    0x08000000\n","X001001    0x08000000\n","X001002    0x08000000\n","X001003    0x08000000\n","X001004    0x08000000\n","X001005           NaN\n","X001006    0x08000000\n","X001007    0x08000000\n","X001008    0x08000000\n","X001009    0x08000000\n","X001010    0x08000000\n","X001011    0x08000000\n","X001012    0x08000000\n","X001013    0x08000000\n","Name: langs, dtype: object"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["# changing the frame to co mention - win \n","df_nodelist_old = words_df[( (words_df.epos == \"PN\") | (words_df.epos == \"DN\") | (words_df.epos == \"RN\")) ]\n","\n","\"\"\" add the 'id_text' +'id_word' + 'norm1' + 'lemma' into a new data frame (df_nodelist)\n","add each 'id_word' to one of two columns: 'source', 'target' in a new data frame (df_edgelist).\"\"\"\n","size = df_nodelist_old.shape[0]\n","print(\"How many rows: \",size, \"\\nHow many columns: \", df_nodelist_old.shape[1])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h-v2xM2xOJko","executionInfo":{"status":"ok","timestamp":1667944229159,"user_tz":480,"elapsed":141,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"a56e0d3f-3f26-499f-ffea-adff5c107569"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["How many rows:  166 \n","How many columns:  19\n"]}]},{"cell_type":"code","source":["# keeping only certain columns\n","\n","drop = ['lang', 'form', 'delim', 'gdl', 'cf', 'gw' ,'sense', 'norm', 'pos' ,  \n","        'label','id_line']\n","\n","df_nodelist = df_nodelist_old.drop(drop,axis = 1)\n","df_nodelist = df_nodelist.copy()\n","\n","df_nodelist.insert(5, \"ancient_recipient\", \"\")\n","df_nodelist.insert(5, \"ancient_author\", \"\")\n","df_nodelist.insert(5, \"occurencebracket\", \"\")\n","\n","df_nodelist.rename(columns = {'id_word':'Id'}, inplace = True)\n","df_nodelist.rename(columns = {'norm1':'Label'}, inplace = True)\n","\n","df_nodelist['occurencebracket'] = df_nodelist['lemma'].str.extract(r\"\\[([0-9 _]+)\\]\")\n"],"metadata":{"id":"jnWk3JgNOJko"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#dedup\n","df_nodelist = df_nodelist.drop_duplicates(subset=['id_text', 'lemma'], keep='first')"],"metadata":{"id":"xJpqv9WiOJko"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nodesize = df_nodelist.shape[0]\n","catsizeold = df_cat.shape[0]\n","\n","print(\"nodesize: \",nodesize)\n","print(\"catsizeold: \",catsizeold)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QPFqdFwkOJko","executionInfo":{"status":"ok","timestamp":1667944232578,"user_tz":480,"elapsed":2,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"2be46c95-8661-4d59-baa8-737249dcc728"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["nodesize:  83\n","catsizeold:  32\n"]}]},{"cell_type":"code","source":["for i in range(nodesize):\n","  df_nodelist.iat[i,0] = df_nodelist.iloc[i][\"Id\"].replace(\".\", \"\")\n","\n","df_nodelist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"gkQB419dOJko","executionInfo":{"status":"ok","timestamp":1667944234419,"user_tz":480,"elapsed":179,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"476f03de-a39e-41fb-ecde-7da2a2050e5d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             epos             Id  id_text extent scope occurencebracket  \\\n","175     P29605965    P296059.6.5  P296059                             1   \n","376     X00101193    X001011.9.3  X001011                             1   \n","423    X001013143   X001013.14.3  X001013                             1   \n","436    X001013193   X001013.19.3  X001013                             1   \n","684   X0010131124  X001013.112.4  X001013                             1   \n","...           ...            ...      ...    ...   ...              ...   \n","4860  P3559101115  P355910.111.5  P355910                             1   \n","4955    P28564031    P285640.3.1  P285640                             1   \n","4960    P28564053    P285640.5.3  P285640                             1   \n","4992   P285640201   P285640.20.1  P285640                             1   \n","5035   P285640363   P285640.36.3  P285640                             1   \n","\n","     ancient_author ancient_recipient state       Label            lemma  \n","175                                               Ištar       Ištar[1]DN  \n","376                                              Šū-Sîn      Šū-Sîn[1]RN  \n","423                                               Ištar       Ištar[1]DN  \n","436                                              Nanaya      Nanaya[1]DN  \n","684                                           Hammurāpi   Hammurāpi[1]RN  \n","...             ...               ...   ...         ...              ...  \n","4860                                         Iddin-Damu  Iddin-Damu[1]PN  \n","4955                                               Enki        Enki[1]DN  \n","4960                                              Ištar       Ištar[1]DN  \n","4992                                                Sîn         Sîn[1]DN  \n","5035                                             Išhara      Išhara[1]DN  \n","\n","[83 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-4d6ee3a6-b07a-4c12-89c9-bfb877e5f339\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>epos</th>\n","      <th>Id</th>\n","      <th>id_text</th>\n","      <th>extent</th>\n","      <th>scope</th>\n","      <th>occurencebracket</th>\n","      <th>ancient_author</th>\n","      <th>ancient_recipient</th>\n","      <th>state</th>\n","      <th>Label</th>\n","      <th>lemma</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>175</th>\n","      <td>P29605965</td>\n","      <td>P296059.6.5</td>\n","      <td>P296059</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Ištar</td>\n","      <td>Ištar[1]DN</td>\n","    </tr>\n","    <tr>\n","      <th>376</th>\n","      <td>X00101193</td>\n","      <td>X001011.9.3</td>\n","      <td>X001011</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Šū-Sîn</td>\n","      <td>Šū-Sîn[1]RN</td>\n","    </tr>\n","    <tr>\n","      <th>423</th>\n","      <td>X001013143</td>\n","      <td>X001013.14.3</td>\n","      <td>X001013</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Ištar</td>\n","      <td>Ištar[1]DN</td>\n","    </tr>\n","    <tr>\n","      <th>436</th>\n","      <td>X001013193</td>\n","      <td>X001013.19.3</td>\n","      <td>X001013</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Nanaya</td>\n","      <td>Nanaya[1]DN</td>\n","    </tr>\n","    <tr>\n","      <th>684</th>\n","      <td>X0010131124</td>\n","      <td>X001013.112.4</td>\n","      <td>X001013</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Hammurāpi</td>\n","      <td>Hammurāpi[1]RN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4860</th>\n","      <td>P3559101115</td>\n","      <td>P355910.111.5</td>\n","      <td>P355910</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Iddin-Damu</td>\n","      <td>Iddin-Damu[1]PN</td>\n","    </tr>\n","    <tr>\n","      <th>4955</th>\n","      <td>P28564031</td>\n","      <td>P285640.3.1</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Enki</td>\n","      <td>Enki[1]DN</td>\n","    </tr>\n","    <tr>\n","      <th>4960</th>\n","      <td>P28564053</td>\n","      <td>P285640.5.3</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Ištar</td>\n","      <td>Ištar[1]DN</td>\n","    </tr>\n","    <tr>\n","      <th>4992</th>\n","      <td>P285640201</td>\n","      <td>P285640.20.1</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Sîn</td>\n","      <td>Sîn[1]DN</td>\n","    </tr>\n","    <tr>\n","      <th>5035</th>\n","      <td>P285640363</td>\n","      <td>P285640.36.3</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Išhara</td>\n","      <td>Išhara[1]DN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>83 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d6ee3a6-b07a-4c12-89c9-bfb877e5f339')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4d6ee3a6-b07a-4c12-89c9-bfb877e5f339 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4d6ee3a6-b07a-4c12-89c9-bfb877e5f339');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":95}]},{"cell_type":"markdown","source":["##this requires reviewing (the row numbers are the id text)"],"metadata":{"id":"5TYQNEaQOJko"}},{"cell_type":"code","source":["#designation, subgenre, period, provenience, archive matching\n","for j in range(df_cat.shape[0]):\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"designation\"] = df_cat.iloc[j][\"designation\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"subgenre\"] = df_cat.iloc[j][\"subgenre\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"period\"] = df_cat.iloc[j][\"period\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"provenience\"] = df_cat.iloc[j][\"provenience\"]\n"],"metadata":{"id":"_IMwEjeWOJko"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_nodelist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"1Efe-sJHOJko","executionInfo":{"status":"ok","timestamp":1667944239659,"user_tz":480,"elapsed":143,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"fd94973c-e11f-4c97-a31a-2d727e55507a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             epos             Id  id_text extent scope occurencebracket  \\\n","175     P29605965    P296059.6.5  P296059                             1   \n","376     X00101193    X001011.9.3  X001011                             1   \n","423    X001013143   X001013.14.3  X001013                             1   \n","436    X001013193   X001013.19.3  X001013                             1   \n","684   X0010131124  X001013.112.4  X001013                             1   \n","...           ...            ...      ...    ...   ...              ...   \n","4860  P3559101115  P355910.111.5  P355910                             1   \n","4955    P28564031    P285640.3.1  P285640                             1   \n","4960    P28564053    P285640.5.3  P285640                             1   \n","4992   P285640201   P285640.20.1  P285640                             1   \n","5035   P285640363   P285640.36.3  P285640                             1   \n","\n","     ancient_author ancient_recipient state       Label            lemma  \\\n","175                                               Ištar       Ištar[1]DN   \n","376                                              Šū-Sîn      Šū-Sîn[1]RN   \n","423                                               Ištar       Ištar[1]DN   \n","436                                              Nanaya      Nanaya[1]DN   \n","684                                           Hammurāpi   Hammurāpi[1]RN   \n","...             ...               ...   ...         ...              ...   \n","4860                                         Iddin-Damu  Iddin-Damu[1]PN   \n","4955                                               Enki        Enki[1]DN   \n","4960                                              Ištar       Ištar[1]DN   \n","4992                                                Sîn         Sîn[1]DN   \n","5035                                             Išhara      Išhara[1]DN   \n","\n","     designation subgenre period provenience  \n","175          NaN      NaN    NaN         NaN  \n","376          NaN      NaN    NaN         NaN  \n","423          NaN      NaN    NaN         NaN  \n","436          NaN      NaN    NaN         NaN  \n","684          NaN      NaN    NaN         NaN  \n","...          ...      ...    ...         ...  \n","4860         NaN      NaN    NaN         NaN  \n","4955         NaN      NaN    NaN         NaN  \n","4960         NaN      NaN    NaN         NaN  \n","4992         NaN      NaN    NaN         NaN  \n","5035         NaN      NaN    NaN         NaN  \n","\n","[83 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-78c42099-7ee2-464c-bb5a-472bcbb49a74\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>epos</th>\n","      <th>Id</th>\n","      <th>id_text</th>\n","      <th>extent</th>\n","      <th>scope</th>\n","      <th>occurencebracket</th>\n","      <th>ancient_author</th>\n","      <th>ancient_recipient</th>\n","      <th>state</th>\n","      <th>Label</th>\n","      <th>lemma</th>\n","      <th>designation</th>\n","      <th>subgenre</th>\n","      <th>period</th>\n","      <th>provenience</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>175</th>\n","      <td>P29605965</td>\n","      <td>P296059.6.5</td>\n","      <td>P296059</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Ištar</td>\n","      <td>Ištar[1]DN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>376</th>\n","      <td>X00101193</td>\n","      <td>X001011.9.3</td>\n","      <td>X001011</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Šū-Sîn</td>\n","      <td>Šū-Sîn[1]RN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>423</th>\n","      <td>X001013143</td>\n","      <td>X001013.14.3</td>\n","      <td>X001013</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Ištar</td>\n","      <td>Ištar[1]DN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>436</th>\n","      <td>X001013193</td>\n","      <td>X001013.19.3</td>\n","      <td>X001013</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Nanaya</td>\n","      <td>Nanaya[1]DN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>684</th>\n","      <td>X0010131124</td>\n","      <td>X001013.112.4</td>\n","      <td>X001013</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Hammurāpi</td>\n","      <td>Hammurāpi[1]RN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4860</th>\n","      <td>P3559101115</td>\n","      <td>P355910.111.5</td>\n","      <td>P355910</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Iddin-Damu</td>\n","      <td>Iddin-Damu[1]PN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4955</th>\n","      <td>P28564031</td>\n","      <td>P285640.3.1</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Enki</td>\n","      <td>Enki[1]DN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4960</th>\n","      <td>P28564053</td>\n","      <td>P285640.5.3</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Ištar</td>\n","      <td>Ištar[1]DN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4992</th>\n","      <td>P285640201</td>\n","      <td>P285640.20.1</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Sîn</td>\n","      <td>Sîn[1]DN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5035</th>\n","      <td>P285640363</td>\n","      <td>P285640.36.3</td>\n","      <td>P285640</td>\n","      <td></td>\n","      <td></td>\n","      <td>1</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>Išhara</td>\n","      <td>Išhara[1]DN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>83 rows × 15 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78c42099-7ee2-464c-bb5a-472bcbb49a74')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-78c42099-7ee2-464c-bb5a-472bcbb49a74 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-78c42099-7ee2-464c-bb5a-472bcbb49a74');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["#saving the df node_list\n","node = pd.DataFrame(df_nodelist) "],"metadata":{"id":"GMqMcTEyOJko"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(df_nodelist) \n","    \n","# saving the dataframe \n","f = \"AKKLOVE_result_df_nodelist_dedup.csv\"\n","\n","with open(folder+f, 'w', encoding = 'utf-8-sig') as f:\n","  df.to_csv(f) "],"metadata":{"id":"rs86mPoBOJko"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#list of unique id text\n","textlist = df_nodelist.id_text.unique()\n","print(\"HOW MANY DIFFERENT TEXTS:\",len(textlist))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667944278318,"user_tz":480,"elapsed":109,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"c12efbfa-9d8a-4843-e354-ec528d8ec046","id":"WMP8BS6tOJko"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["HOW MANY DIFFERENT TEXTS: 24\n"]}]},{"cell_type":"code","source":["#create frame for edgelist\n","import pandas as pd \n","d = {'Id': [], 'id_text': [], 'weight': [], 'Source': [], 'Target': [], 'Type': []}\n","df_edgelist = pd.DataFrame(data=d)\n","df_edgelist\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49},"executionInfo":{"status":"ok","timestamp":1667944280207,"user_tz":480,"elapsed":3,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"6e4a04a6-42fd-438e-900b-d9d4f871dc28","id":"IS1DTTpKOJko"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [Id, id_text, weight, Source, Target, Type]\n","Index: []"],"text/html":["\n","  <div id=\"df-b48cd767-f7d4-4f57-bac9-37e8c6980790\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>id_text</th>\n","      <th>weight</th>\n","      <th>Source</th>\n","      <th>Target</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b48cd767-f7d4-4f57-bac9-37e8c6980790')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b48cd767-f7d4-4f57-bac9-37e8c6980790 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b48cd767-f7d4-4f57-bac9-37e8c6980790');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["start = 0\n","end = len(textlist)\n","\n","for k in range(start,end):\n","  match = df_nodelist.loc[df_nodelist['id_text'] == textlist[k]]\n","  length = len(match)\n","  counteredge = 0\n","  for i in range(length):\n","    id = match.iloc[i][\"Id\"]\n","    idt = match.iloc[i][\"id_text\"]\n","    for j in range(length):\n","      if i != j:\n","        #print(match.iloc[i]['Id'],match.iloc[j]['Id'])\n","        df_edgelist.loc[len(df_edgelist.index)] = [counteredge, idt, 1.0,\n","                                                 id, match.iloc[j][\"Id\"], \"undirected\"] \n","        counteredge += 1\n","        \n","  print(\"Current progress: \",np.round((k-start)/(end-start)*100,2),'%', \"----> Iteration:\",k)\n","  print(\"NODES:\", length, \"EDGES: \", counteredge)\n","  print(\"==========\")\n","\n","      \n","  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667944281991,"user_tz":480,"elapsed":1667,"user":{"displayName":"Win Moe","userId":"04864470597207248853"}},"outputId":"e57fd6e8-ef03-4d13-d061-15691e79ea49","id":"6HJjGFKzOJko"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Current progress:  0.0 % ----> Iteration: 0\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  4.17 % ----> Iteration: 1\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  8.33 % ----> Iteration: 2\n","NODES: 3 EDGES:  6\n","==========\n","Current progress:  12.5 % ----> Iteration: 3\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  16.67 % ----> Iteration: 4\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  20.83 % ----> Iteration: 5\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  25.0 % ----> Iteration: 6\n","NODES: 6 EDGES:  30\n","==========\n","Current progress:  29.17 % ----> Iteration: 7\n","NODES: 3 EDGES:  6\n","==========\n","Current progress:  33.33 % ----> Iteration: 8\n","NODES: 5 EDGES:  20\n","==========\n","Current progress:  37.5 % ----> Iteration: 9\n","NODES: 3 EDGES:  6\n","==========\n","Current progress:  41.67 % ----> Iteration: 10\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  45.83 % ----> Iteration: 11\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  50.0 % ----> Iteration: 12\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  54.17 % ----> Iteration: 13\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  58.33 % ----> Iteration: 14\n","NODES: 1 EDGES:  0\n","==========\n","Current progress:  62.5 % ----> Iteration: 15\n","NODES: 3 EDGES:  6\n","==========\n","Current progress:  66.67 % ----> Iteration: 16\n","NODES: 2 EDGES:  2\n","==========\n","Current progress:  70.83 % ----> Iteration: 17\n","NODES: 16 EDGES:  240\n","==========\n","Current progress:  75.0 % ----> Iteration: 18\n","NODES: 3 EDGES:  6\n","==========\n","Current progress:  79.17 % ----> Iteration: 19\n","NODES: 4 EDGES:  12\n","==========\n","Current progress:  83.33 % ----> Iteration: 20\n","NODES: 3 EDGES:  6\n","==========\n","Current progress:  87.5 % ----> Iteration: 21\n","NODES: 5 EDGES:  20\n","==========\n","Current progress:  91.67 % ----> Iteration: 22\n","NODES: 10 EDGES:  90\n","==========\n","Current progress:  95.83 % ----> Iteration: 23\n","NODES: 4 EDGES:  12\n","==========\n"]}]},{"cell_type":"code","source":["df = pd.DataFrame(df_edgelist) \n","    \n","f = \"akklove_result\"+str(start)+\"_\"+str(end)+\"result_df_edgelist.csv\"\n","\n","with open(folder+f, 'w', encoding = 'utf-8-sig') as f:\n","  df.to_csv(f) \n"],"metadata":{"id":"eP7JMQK6OJkp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# new"],"metadata":{"id":"xbwvyfiGNW02"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"MRhT1MWSJ5j3"},"outputs":[],"source":["os.chdir(folder + 'network/')\n","\n","projects = [\n","      'suhu'\n","\n","]\n","projects = oracc_download(projects,'ur3') #DOWNLOAD REDUNDANCY\n","projects"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O--qrp6DJ5j3"},"outputs":[],"source":["lemm_l = []\n","meta_d = {\"label\": None, \"id_text\": None}\n","dollar_keys = [\"extent\", \"scope\", \"state\"]\n","\n","df_cat = pd.DataFrame()\n","used_pnums = []\n","cat_d = {}\n","for project in projects:\n","  print('Project: ' + str(project))\n","  z = zipfile.ZipFile('jsonzip/' + project.replace('/','-') + '.zip')\n","  #print(file + \" does not exist or is not a proper ZIP file\")\n","  files = z.namelist()     # list of all the files in the ZIP\n","  files = [name for name in files if \"corpusjson\" in name and name[-5:] == '.json']\n","  cat_file = z.read(project + '/catalogue.json').decode('utf-8')\n","  cat_json = json.loads(cat_file)\n","  cat_d.update(dict(cat_json['members']))\n","  #df_cat = pd.concat([df_cat,pd.DataFrame(cat_json['members']).T])                          #that holds all the P, Q, and X numbers.\n","\n","  for filename in tqdm(files):       #iterate over the file names\n","      id_text = filename[-12:-5]\n","      if id_text in used_pnums:\n","        continue\n","      else:\n","        used_pnums.append(id_text)\n","      meta_d[\"id_text\"] = id_text\n","\n","      st = z.read(filename).decode('utf-8')         #read and decode the json file of one particular text\n","      data_json = json.loads(st)                # make it into a json object (essentially a dictionary)\n","      #print(str(data_json))\n","      parsejson(data_json)               # and send to the parsejson() function\n","  z.close()\n","\n","df_cat = pd.DataFrame(cat_d).T\n","words_df = pd.DataFrame(lemm_l)\n","#words_df\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TOAZ4SIrJ5j4"},"outputs":[],"source":["words_df = words_df.fillna('')   # replace NaN (Not a Number) with empty string\n","\n","findreplace = {' ' : '-', ',' : ''}\n","words_df = words_df.replace({'gw' : findreplace, 'sense' : findreplace}, regex=True)\n","\n","words_df['id_line'] = [int(wordid.split('.')[1]) for wordid in words_df['id_word']]\n","\n","words_df[\"norm1\"] = words_df[\"norm\"]\n","words_df.loc[words_df[\"norm1\"] == \"\" , 'norm1'] = words_df['form']\n","\n","words_df['lemma'] = words_df[\"cf\"] + \"[\" + words_df[\"gw\"] + \"]\" + words_df[\"pos\"]\n","words_df.loc[words_df[\"cf\"] == \"\" , 'lemma'] = words_df['form'] + \"[NA]NA\"\n","words_df.loc[words_df[\"form\"] == \"\", 'lemma'] = \"\"\n","\n","#words_df = words_df.merge(df_cat[['dossier_list']],how='left',left_on='id_text',right_index=True)\n","\n","d = words_df.to_dict(orient='index')\n","\n","words_df"]},{"cell_type":"code","source":["#df cat\n","df_cat"],"metadata":{"id":"o3JJHFPpJ5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# changing the frame to co mention - win \n","df_nodelist_old = words_df[( (words_df.epos == \"PN\") | (words_df.epos == \"DN\") | (words_df.epos == \"RN\")) & (words_df.ftype != \"yn\")]\n","\n","\"\"\" add the 'id_text' +'id_word' + 'norm1' + 'lemma' into a new data frame (df_nodelist)\n","add each 'id_word' to one of two columns: 'source', 'target' in a new data frame (df_edgelist).\"\"\"\n","size = df_nodelist_old.shape[0]\n","print(\"How many rows: \",size, \"\\nHow many columns: \", df_nodelist_old.shape[1])\n"],"metadata":{"id":"_zwolueHJ5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# keeping only certain columns\n","\n","drop = ['lang', 'form', 'delim', 'gdl', 'cf', 'gw' ,'sense', 'norm', 'pos' ,  \n","        'label', 'extent', 'scope', 'state', 'ftype', 'headform', 'contrefs', \n","        'norm0', 'base', 'morph' ,'cont' ,'id_line']\n","\n","df_nodelist = df_nodelist_old.drop(drop,axis = 1)\n","df_nodelist = df_nodelist.copy()\n","\n","df_nodelist.insert(5, \"ancient_recipient\", \"\")\n","df_nodelist.insert(5, \"ancient_author\", \"\")\n","df_nodelist.insert(5, \"occurencebracket\", \"\")\n","\n","df_nodelist.rename(columns = {'id_word':'Id'}, inplace = True)\n","df_nodelist.rename(columns = {'norm1':'Label'}, inplace = True)\n","\n","df_nodelist['occurencebracket'] = df_nodelist['lemma'].str.extract(r\"\\[([0-9 _]+)\\]\")\n","\n","df_nodelist"],"metadata":{"id":"EHajZO-GJ5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#dedup\n","df_nodelist = df_nodelist.drop_duplicates(subset=['id_text', 'lemma'], keep='first')"],"metadata":{"id":"TMqETADSJ5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nodesize = df_nodelist.shape[0]\n","catsizeold = df_cat.shape[0]\n","\n","print(\"nodesize: \",nodesize)\n","print(\"catsizeold: \",catsizeold)\n","\n"],"metadata":{"id":"M9xyxt80J5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(catsizeold):\n","  if (type(df_cat.iloc[i][\"ancient_author\"]) != str) or len(df_cat.iloc[i][\"ancient_author\"]) == 0:\n","    df_cat.iloc[i][\"ancient_author\"] = \"NaN\"\n","\n","df_cat_filter = df_cat[ (df_cat.ancient_author != \"NaN\") ]\n","\n","catsize = df_cat_filter.shape[0]\n","\n","print(\"catsize: \",catsize)\n","\n","df_cat_filter.loc[:,\"ancient_author\"]"],"metadata":{"id":"4gxgR3zfJ5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(nodesize):\n","  df_nodelist.iat[i,1] = df_nodelist.iloc[i][\"Id\"].replace(\".\", \"\")\n","\n","df_nodelist"],"metadata":{"id":"76stIG6xJ5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#df nodelist matching with cat through lists\n","\n","for i in range(catsize):\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat_filter.iat[i,4]),\"ancient_author\"] = df_cat_filter.iloc[i][\"ancient_author\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat_filter.iat[i,4]),\"ancient_recipient\"] = df_cat_filter.iloc[i][\"ancient_recipient\"]\n","\n"],"metadata":{"id":"L3YTVrL6J5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#designation, subgenre, period, provenience, archive matching\n","for j in range(df_cat.shape[0]):\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"designation\"] = df_cat.iloc[j][\"designation\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"subgenre\"] = df_cat.iloc[j][\"subgenre\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"period\"] = df_cat.iloc[j][\"period\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"provenience\"] = df_cat.iloc[j][\"provenience\"]\n","  df_nodelist.loc[df_nodelist[\"id_text\"] == str(df_cat.iat[j,4]),\"archive\"] = df_cat.iloc[j][\"archive\"]\n"],"metadata":{"id":"wcwWTMdyJ5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_nodelist"],"metadata":{"id":"L5rTDn6NJ5j4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#saving the df node_list\n","node = pd.DataFrame(df_nodelist) "],"metadata":{"id":"iNEWwd9xJ5j5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(df_nodelist) \n","    \n","# saving the dataframe \n","f = \"result_df_nodelist_dedup.csv\"\n","\n","with open(folder+f, 'w', encoding = 'utf-8-sig') as f:\n","  df.to_csv(f) "],"metadata":{"id":"Pc7Jc6Q3J5j5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#filter nodelist for directed edges\n","df_nodedir = df_nodelist[(df_nodelist.ancient_author != \"\")]\n","# we want to save NODE DIR \n","df = pd.DataFrame(df_nodedir) \n","    \n","# saving the dataframe \n","f = \"result_df_nodedirtest.csv\"\n","\n","with open(folder+f, 'w', encoding = 'utf-8-sig') as f:\n","  df.to_csv(f) "],"metadata":{"id":"oQfigNKVJ5j5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#list of unique id text\n","textlist = df_nodelist.id_text.unique()\n","print(\"HOW MANY DIFFERENT TEXTS:\",len(textlist))"],"metadata":{"id":"Im9FVJ-rJ5j5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#create frame for edgelist\n","import timeit\n","import pandas as pd \n","d = {'Id': [], 'id_text': [], 'weight': [], 'Source': [], 'Target': [], 'Type': []}\n","df_edgelist = pd.DataFrame(data=d)\n","df_edgelist"],"metadata":{"id":"hqT3tlFrJ5j5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["start = 0\n","end = 1540\n","\n","for k in range(start,end):\n","  match = df_nodelist.loc[df_nodelist['id_text'] == textlist[k]]\n","  length = len(match)\n","  counteredge = 0\n","  for i in range(length):\n","    id = match.iloc[i][\"Id\"]\n","    idt = match.iloc[i][\"id_text\"]\n","    for j in range(length):\n","      if i != j:\n","        #print(match.iloc[i]['Id'],match.iloc[j]['Id'])\n","        df_edgelist.loc[len(df_edgelist.index)] = [id, idt, 1.0,\n","                                                 id, match.iloc[j][\"Id\"], \"undirected\"] \n","        counteredge += 1\n","        \n","  print(\"Current progress: \",np.round((k-start)/(end-start)*100,2),'%', \"----> Iteration:\",k)\n","  print(\"NODES:\", length, \"EDGES: \", counteredge)\n","  print(\"==========\")\n","\n","      \n","  "],"metadata":{"id":"x-wg-c6jJ5j5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(df_edgelist) \n","    \n","# saving the dataframe, it is too large so let's do 1000 at a time.\n","f = \"result\"+str(start)+\"_\"+str(end)+\"result_df_edgelist.csv\"\n","\n","with open(folder+f, 'w', encoding = 'utf-8-sig') as f:\n","  df.to_csv(f) \n"],"metadata":{"id":"4Cq-BL1iJ5j5"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cArTi7VMJ5j5"},"outputs":[],"source":["df_cat"]},{"cell_type":"code","source":[],"metadata":{"id":"P9KzxBxJI28w"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1rM9fgzHGWxEnj0TYTE5sJyjvS4PRanOo","timestamp":1663951636351},{"file_id":"19S5MwowGQM9xQ2lHzZvGwQQJ4dZVjblj","timestamp":1663615640270},{"file_id":"1Kgxo0SzGftFaFVdR7HHuJbtQnt0slVFt","timestamp":1593733620760}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"31d347f7d24b4d8d8946b04d57d8e13e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_cbcb02739a3d43b580ae84bcba6699a5","IPY_MODEL_efaa6d3f6bc04e24b8d0d40bf53dd9e6","IPY_MODEL_0ad4d58322524655b24e11c64bef27c1"],"layout":"IPY_MODEL_436cc0c578e140648079dabbd77bf4f5"}},"cbcb02739a3d43b580ae84bcba6699a5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d368a4e52f6147d98c7949ebe4c19513","placeholder":"​","style":"IPY_MODEL_bbab20026d32453d954bf8daa43ce707","value":"akklove: "}},"efaa6d3f6bc04e24b8d0d40bf53dd9e6":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"info","description":"","description_tooltip":null,"layout":"IPY_MODEL_2226a26237114c1ab79030fbb64bac8b","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_35deafd0e80944aeb4c039c059226878","value":1}},"0ad4d58322524655b24e11c64bef27c1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6b6f6d120475473aab9cdabacbfcb22c","placeholder":"​","style":"IPY_MODEL_23d27b90a21d496d889f8067861dbcc2","value":" 2.08M/0.00 [00:15&lt;00:00, 5.43MB/s]"}},"436cc0c578e140648079dabbd77bf4f5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d368a4e52f6147d98c7949ebe4c19513":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bbab20026d32453d954bf8daa43ce707":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2226a26237114c1ab79030fbb64bac8b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"35deafd0e80944aeb4c039c059226878":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6b6f6d120475473aab9cdabacbfcb22c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"23d27b90a21d496d889f8067861dbcc2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fe3e95676776481e80717c7f6e438b28":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_152f716541744dd1abbc34eabee76d4b","IPY_MODEL_b09c73947e1647d0accb411b2c1429aa","IPY_MODEL_c03955363e8a4e16bcb133a59f1a5229"],"layout":"IPY_MODEL_0fa785062fca473380082146843ec16e"}},"152f716541744dd1abbc34eabee76d4b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9ba4edec760d4a209a71075c4fac580d","placeholder":"​","style":"IPY_MODEL_d7e01089b537449790f5a0d2421f9f43","value":"suhu: 100%"}},"b09c73947e1647d0accb411b2c1429aa":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_13c0cedfb22c413a93bb700c9421f569","max":1251704,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2980ae2743954ad497f13d67fd4a64a6","value":1251704}},"c03955363e8a4e16bcb133a59f1a5229":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f650962eecd34ec586efa5f91ab704f9","placeholder":"​","style":"IPY_MODEL_79201ec10e7a45f09f6d7cecaa14f859","value":" 1.25M/1.25M [00:00&lt;00:00, 1.37MB/s]"}},"0fa785062fca473380082146843ec16e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9ba4edec760d4a209a71075c4fac580d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d7e01089b537449790f5a0d2421f9f43":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"13c0cedfb22c413a93bb700c9421f569":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2980ae2743954ad497f13d67fd4a64a6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f650962eecd34ec586efa5f91ab704f9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"79201ec10e7a45f09f6d7cecaa14f859":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}